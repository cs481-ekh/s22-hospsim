{"version":3,"sources":["assets/budget.jpeg","assets/error.jpeg","assets/initialpg.jpeg","assets/input.jpeg","assets/shifts.jpeg","assets/staffModal.jpeg","assets/sdp-logo-infinity.png","components/main/About.js","assets/noun-help-2492040.png","components/main/Tooltip.js","components/main/StaffAdd.js","components/main/StaffAddCal.js","components/main/StaffList.js","components/main/EventCalendar.js","components/main/Result.js","components/main/RandomHPPDInfo.js","components/main/StaffBudget.js","components/main/ShiftTotals.js","components/main/Scenario.js","assets/Left-aligned-square-gray-2.png","components/header/Header.js","components/footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["About","className","src","logoIn","alt","width","id","onmouseleave","href","Card","Body","Figure","Image","height","initialpg","Caption","input","error","staffModal","shifts","budget","React","Component","Tooltip","props","timeout","useState","active","setActive","onMouseEnter","setTimeout","delay","onMouseLeave","clearInterval","children","direction","content","StaffAdd","generateUUID","s","hexDigits","i","substr","Math","floor","random","join","getShiftValue","shiftString","shiftValue","handleAdd","value","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","uuid","shiftTotal","parseInt","quantity","shift","staff","type","staffType","onStaffAdd","handleClose","setState","handleShow","state","open","show","qtyVals","push","qtyList","map","qty","this","showBud","onClick","logo","Modal","animation","onHide","Form","onSubmit","Header","Title","Group","controlId","required","Label","Control","as","name","Footer","Button","variant","timeStart","date","timeEnd","backgroundColorVar","backgroundColor","start","end","textColor","showCal","placeholder","StaffList","listAdd","index","staffs","onStaffChangeOnUpdate","listSub","splice","listRemove","filter","criteria","isAscend","sort","a","b","shiftFilter","filterStaffTypeAsc","filterNameAsc","filterShiftTypeAsc","filterQtyAsc","staffList","bind","length","onChange","e","scope","class","EventCalendar","onTrigger","event","events","eventsArry","list","parentCallback","plugins","dayGridPlugin","interactionPlugin","timeGridPlugin","eventClick","initialView","headerToolbar","views","twoWeekView","duration","week","buttonText","Result","getStaffHours","totalHours","calculation","info","retVal","census","HPPD","calc","toFixed","RandomHPPDInfo","Min","Max","Range","Rand","round","setRandomValues","randomHPPD","randomBedUnit","unit","bedUnit","onInfoChange","StaffBudget","getShiftBudget","shiftBudget","showBudget","ShiftTotals","getDayShift","dayShiftHours","getEveningShift","eveningShiftHours","getNightShift","nightShiftHours","Scenario","handleStaffChange","handleStaffChangeCal","calEvents","handleStaffAdd","staffItem","staffCopy","handleCallback","childData","handleStaffAddCal","eventsRN","title","eventsLVN","eventsUN","eventsAll","handleInfoChange","handleCheckChangeBudget","checked","prevState","assign","handleCheckChangeCal","findFormErrors","val","newErrors","results","staffNum","num","center","errors","handleInputChange","keys","label","noValidate","htmlFor","isInvalid","Feedback","onStaffChange","StaffAddCal","calChange","bc","onReload","console","log","window","location","reload","Navbar","bg","Container","Nav","to","Link","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"idAAe,MAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,uCCA1B,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,wCCA1B,MAA0B,8C,OCanCA,E,4JAIF,WACI,OACI,sBAAKC,UAAU,YAAf,UAEI,sBAAKA,UAAU,WAAf,UACI,uDACA,oDACA,2DAEJ,sBAAKA,UAAU,WAAf,UACI,iDACA,oHACA,2FAGJ,qBAAKC,IAAKC,EAAQC,IAAI,6BAA6BC,MAAM,UACjE,sBAAKC,GAAG,WAAWC,aAAa,+CAAhC,UACI,uBACA,mDAFJ,iCAGkC,uBAHlC,yBAI0B,uBAJ1B,4CAK6C,uBAAK,uBALlD,aAMc,uBAEV,6EAAmD,uBARvD,eASgB,uBACZ,wGAVJ,mDAYoD,uBAChD,mBAAGC,KAAK,4EAAR,0FA3BA,OA8BI,sBAAKP,UAAU,WAAf,UACI,yCACA,mFAEJ,sBAAKA,UAAU,WAAf,UACI,mDACA,gNAGJ,sBAAKA,UAAU,WAAf,UACI,qDACA,goCASA,qgCAQA,cAACQ,EAAA,EAAD,CAAMR,UAAU,OAAhB,SACI,eAACQ,EAAA,EAAKC,KAAN,WACI,kDACA,2FACA,2DACA,yGAGR,8eAKA,cAACD,EAAA,EAAD,CAAMR,UAAU,OAAhB,SACI,cAACQ,EAAA,EAAKC,KAAN,UACI,+BACI,2CACA,+BACI,wCACA,+BACI,4CACA,8CACA,+BACI,kDACA,oDACA,2CACA,8CACA,iDACA,iDACA,8CACA,gDACA,iDAEJ,2CACA,wDAMpB,kiBAMA,4FAGA,eAACC,EAAA,EAAD,WACI,cAACA,EAAA,EAAOC,MAAR,CACIP,MAAM,MACNQ,OAAO,MACPT,IAAI,cACJF,IAAKY,IAET,cAACH,EAAA,EAAOI,QAAR,kDAIJ,eAACJ,EAAA,EAAD,WACI,cAACA,EAAA,EAAOC,MAAR,CACIP,MAAM,MACNQ,OAAO,MACPT,IAAI,8BACJF,IAAKc,IAET,cAACL,EAAA,EAAOI,QAAR,4FAIJ,eAACJ,EAAA,EAAD,WACI,cAACA,EAAA,EAAOC,MAAR,CACIP,MAAM,MACNQ,OAAO,MACPT,IAAI,iBACJF,IAAKe,IAET,cAACN,EAAA,EAAOI,QAAR,yCAIJ,eAACJ,EAAA,EAAD,WACI,cAACA,EAAA,EAAOC,MAAR,CACIP,MAAM,MACNQ,OAAO,MACPT,IAAI,cACJF,IAAKgB,IAET,cAACP,EAAA,EAAOI,QAAR,8BAIJ,eAACJ,EAAA,EAAD,WACI,cAACA,EAAA,EAAOC,MAAR,CACIP,MAAM,MACNQ,OAAO,MACPT,IAAI,eACJF,IAAKiB,IAET,cAACR,EAAA,EAAOI,QAAR,yCAIJ,eAACJ,EAAA,EAAD,WACI,cAACA,EAAA,EAAOC,MAAR,CACIP,MAAM,MACNQ,OAAO,MACPT,IAAI,SACJF,IAAKkB,IAET,cAACT,EAAA,EAAOI,QAAR,yCAKR,sBAAKd,UAAU,WAAf,UACI,mDACA,qBAAKA,UAAU,YAAf,SACI,+BACI,yCACA,yDACA,wDACA,6CAIZ,8BAAG,mBAAGO,KAAK,2CAAR,sCAAH,qBAAqG,mBAAGA,KAAK,+BAAR,gCAArG,0C,GA/LIa,IAAMC,WAqMXtB,I,gDClNA,G,MAAA,IAA0B,+C,QCqC1BuB,G,MAlCC,SAACC,GACf,IAAIC,EACJ,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAaA,OACE,sBACE3B,UAAU,kBAEV4B,aAfY,WACdJ,EAAUK,YAAW,WACnBF,GAAU,KACTJ,EAAMO,OAAS,MAahBC,aAVY,WACdC,cAAcR,GACdG,GAAU,IAIV,UAOGJ,EAAMU,SACNP,GACC,qBAAK1B,UAAS,sBAAiBuB,EAAMW,WAAa,OAAlD,SAEGX,EAAMY,eCuIFC,E,kDA5Jd,WAAYb,GAAQ,IAAD,8BAClB,cAAMA,IAQPc,aAAe,WAGd,IAFA,IAAIC,EAAI,GACJC,EAAY,mBACPC,EAAI,EAAGA,EAAI,GAAIA,IACvBF,EAAEE,GAAKD,EAAUE,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAkB,GAK3D,OAHAN,EAAE,IAAM,IACRA,EAAE,IAAMC,EAAUE,OAAgB,EAARH,EAAE,IAAa,EAAK,GAC9CA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAM,IACxBA,EAAEO,KAAK,KAlBI,EAoBnBC,cAAgB,SAACC,GAGV,IAAIC,EAAa,EACjB,OAAQD,GACJ,IAAK,eAGL,IAAK,iBACDC,EAAa,GACb,MACJ,IAAK,cAGL,IAAK,kBAGL,IAAK,gBACDA,EAAa,EACb,MACJ,QACIA,EAAa,EAGrB,OAAOA,GA5CK,EA8CnBC,UAAY,SAACC,GACZA,EAAMC,iBACN,IAAMC,EAAW,IAAIC,SAASH,EAAMI,QACnCC,EAAcC,OAAOC,YAAYL,EAASM,WAEvCC,EAAO,EAAKtB,eACZuB,EAAaC,SAASN,EAAYO,UAAY,EAAKhB,cAAcS,EAAYQ,OAE7EC,EAAQ,CACX3D,GAAIsD,EACJG,SAAUP,EAAYO,SACtBG,KAAMV,EAAYW,UAClBH,MAAOR,EAAYQ,MACnBH,WAAYA,GAEb,EAAKrC,MAAM4C,WAAWH,GACtB,EAAKI,eA9Da,EAmEnBA,YAAc,WACb,EAAKC,SAAS,CAAE,MAAQ,KApEN,EAsEnBC,WAAa,WACZ,EAAKD,SAAS,CAAE,MAAQ,KArExB,EAAKE,MAAQ,CACZC,MAAM,EACNC,MAAM,GAJW,E,0CA0EnB,WAIC,IADA,IAAIC,EAAU,GACLlC,EAAI,EAAGA,GAAK,GAAIA,IACxBkC,EAAQC,KAAKnC,GAEd,IAAMoC,EAAUF,EAAQG,KAAI,SAACC,GAAD,OAC3B,wBAAkB5B,MAAO4B,EAAzB,SAA+BA,GAAlBA,MAGd,OACCC,KAAKxD,MAAMyD,QACF,gCACT,wBAAQf,KAAK,SAASjE,UAAU,0BAA0B,cAAY,cAAciF,QAASF,KAAKT,WAAlG,iCACA,cAAC,EAAD,CAASnC,QAAQ,kFAAkFD,UAAU,QAA7G,SACa,qBAAKjC,IAAKiF,EAAM/E,IAAI,oBAAoBC,MAAM,KAAKQ,OAAO,SAGtE,cAACuE,EAAA,EAAD,CAAOC,WAAW,EAAOX,KAAMM,KAAKR,MAAME,KAAM,cAAY,mBAAmBY,OAAQN,KAAKX,YAA5F,SACC,eAACkB,EAAA,EAAD,CAAMC,SAAUR,KAAK9B,UAArB,UACC,cAACkC,EAAA,EAAMK,OAAP,UACC,cAACL,EAAA,EAAMM,MAAP,yCAED,eAACN,EAAA,EAAM1E,KAAP,WAEC,eAAC6E,EAAA,EAAKI,MAAN,CAAY1F,UAAU,OAAO2F,UAAU,YAAYC,UAAQ,EAA3D,UACA,cAAC,EAAD,CACezD,QAAQ,iBAAgBD,UAAU,QADjD,SAEC,cAACoD,EAAA,EAAKO,MAAN,2BAEA,eAACP,EAAA,EAAKQ,QAAN,CAAcC,GAAG,SAASC,KAAK,YAAYhG,UAAU,QAArD,UACC,wBAAQkD,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,aAAd,8BAIF,eAACoC,EAAA,EAAKI,MAAN,CAAY1F,UAAU,OAAO2F,UAAU,YAAYC,UAAQ,EAA3D,UACA,cAAC,EAAD,CACezD,QAAQ,iBAAgBD,UAAU,QADjD,SAEC,cAACoD,EAAA,EAAKO,MAAN,2BAEA,eAACP,EAAA,EAAKQ,QAAN,CAAcC,GAAG,SAASC,KAAK,QAAQhG,UAAU,QAAjD,UACC,wBAAQkD,MAAM,eAAd,0BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,gBAAd,iCAIF,eAACoC,EAAA,EAAKI,MAAN,CAAY1F,UAAU,OAAO2F,UAAU,WAAWC,UAAQ,EAA1D,UACA,cAAC,EAAD,CACezD,QAAQ,2CAA0CD,UAAU,QAD3E,SAEC,cAACoD,EAAA,EAAKO,MAAN,yBAEA,cAACP,EAAA,EAAKQ,QAAN,CAAcC,GAAG,SAASC,KAAK,WAA/B,SACEpB,UAIJ,eAACO,EAAA,EAAMc,OAAP,WACC,cAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB,cAAY,oBAAoBlB,QAASF,KAAKX,YAAlF,mBAGA,cAAC8B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB,cAAc,qBAAqBlC,KAAK,SAA1E,SACA,cAAC,EAAD,CAAS9B,QAAQ,wCAAwCD,UAAU,MAAnE,wCAQD,S,GAtJiBd,IAAMC,WC6Lde,E,kDA5Ld,WAAYb,GAAQ,IAAD,8BAClB,cAAMA,IAQPc,aAAe,WAGd,IAFA,IAAIC,EAAI,GACJC,EAAY,mBACPC,EAAI,EAAGA,EAAI,GAAIA,IACvBF,EAAEE,GAAKD,EAAUE,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UAAkB,GAK3D,OAHAN,EAAE,IAAM,IACRA,EAAE,IAAMC,EAAUE,OAAgB,EAARH,EAAE,IAAa,EAAK,GAC9CA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAM,IACxBA,EAAEO,KAAK,KAlBI,EAoBnBC,cAAgB,SAACC,GAGV,IAAIC,EAAa,EACjB,OAAQD,GACJ,IAAK,eAGL,IAAK,iBACDC,EAAa,GACb,MACJ,IAAK,cAGL,IAAK,kBAGL,IAAK,gBACDA,EAAa,EACb,MACJ,QACIA,EAAa,EAGrB,OAAOA,GA5CK,EA8CnBC,UAAY,SAACC,GACZA,EAAMC,iBACN,IAAMC,EAAW,IAAIC,SAASH,EAAMI,QACnCC,EAAcC,OAAOC,YAAYL,EAASM,WAEvCC,EAAO,EAAKtB,eACZuB,EAAaC,SAASN,EAAYO,UAAY,EAAKhB,cAAcS,EAAYQ,OAC7EqC,EAAY7C,EAAY8C,KACxBC,EAAU/C,EAAY8C,KAItBE,EAAqB,YAGA,iBAAtBhD,EAAYQ,OACdqC,GAAsB,YACtBE,GAAkB,YAClBC,EAAqB,EAAKhF,MAAMiF,gBAAgB,IACjB,mBAAtBjD,EAAYQ,OACrBqC,GAAsB,YACtBE,GAAkB,YAClBC,EAAqB,EAAKhF,MAAMiF,gBAAgB,IACjB,gBAAtBjD,EAAYQ,OACrBqC,GAAsB,YACtBE,GAAkB,YAClBC,EAAqB,EAAKhF,MAAMiF,gBAAgB,IACjB,oBAAtBjD,EAAYQ,OACrBqC,GAAsB,YACtBE,GAAkB,YAClBC,EAAqB,EAAKhF,MAAMiF,gBAAgB,IACjB,kBAAtBjD,EAAYQ,QACrBqC,GAAsB,YACtBE,GAAkB,YAClBC,EAAqB,EAAKhF,MAAMiF,gBAAgB,IAKjD,IAAIxC,EAAQ,CACX3D,GAAIsD,EACJM,KAAMV,EAAYW,UAClBH,MAAOR,EAAYQ,MACnBH,WAAYA,EACZ6C,MAAOL,EACPM,IAAKJ,EACLN,KAAMzC,EAAYyC,KAClBW,UAAW,QACXH,gBAAiBD,GAElB,EAAKhF,MAAM4C,WAAWH,GACtB,EAAKI,eAjGa,EAsGnBA,YAAc,WACb,EAAKC,SAAS,CAAE,MAAQ,KAvGN,EAyGnBC,WAAa,WACZ,EAAKD,SAAS,CAAE,MAAQ,KAxGxB,EAAKE,MAAQ,CACZC,MAAM,EACNC,MAAM,GAJW,E,0CA6GnB,WAGC,OACCM,KAAKxD,MAAMqF,QACF,gCACT,wBAAQ3C,KAAK,SAASjE,UAAU,0BAA0B,cAAY,cAAciF,QAASF,KAAKT,WAAlG,mCACA,cAAC,EAAD,CAASnC,QAAQ,kFAAkFD,UAAU,QAA7G,SACa,qBAAKjC,IAAKiF,EAAM/E,IAAI,oBAAoBC,MAAM,KAAKQ,OAAO,SAGtE,cAACuE,EAAA,EAAD,CAAOC,WAAW,EAAOX,KAAMM,KAAKR,MAAME,KAAM,cAAY,mBAAmBY,OAAQN,KAAKX,YAA5F,SACC,eAACkB,EAAA,EAAD,CAAMC,SAAUR,KAAK9B,UAArB,UACC,cAACkC,EAAA,EAAMK,OAAP,UACC,cAACL,EAAA,EAAMM,MAAP,yCAED,eAACN,EAAA,EAAM1E,KAAP,WAEA,eAAC6E,EAAA,EAAKI,MAAN,CAAY1F,UAAU,OAAO2F,UAAU,OAAOC,UAAQ,EAAtD,UACC,cAAC,EAAD,CACezD,QAAQ,gBAAeD,UAAU,QADhD,SAEC,cAACoD,EAAA,EAAKO,MAAN,2BAEG,cAACP,EAAA,EAAKQ,QAAN,CAAcE,KAAK,OAAO/B,KAAK,YAGnC,eAACqB,EAAA,EAAKI,MAAN,CAAY1F,UAAU,OAAO2F,UAAU,YAAYC,UAAQ,EAA3D,UACA,cAAC,EAAD,CACezD,QAAQ,+FAA8FD,UAAU,QAD/H,SAEC,cAACoD,EAAA,EAAKO,MAAN,2BAEA,eAACP,EAAA,EAAKQ,QAAN,CAAcC,GAAG,SAASC,KAAK,YAAYhG,UAAU,QAArD,UACC,wBAAQkD,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,aAAd,8BAIF,eAACoC,EAAA,EAAKI,MAAN,CAAY1F,UAAU,OAAO2F,UAAU,YAAYC,UAAQ,EAA3D,UACA,cAAC,EAAD,CACezD,QAAQ,+GAA8GD,UAAU,QAD/I,SAEC,cAACoD,EAAA,EAAKO,MAAN,2BAEA,eAACP,EAAA,EAAKQ,QAAN,CAAcC,GAAG,SAASC,KAAK,QAAQhG,UAAU,QAAjD,UACC,wBAAQkD,MAAM,eAAd,0BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,gBAAd,iCAGF,eAACoC,EAAA,EAAKI,MAAN,CAAY1F,UAAU,OAAO2F,UAAU,YAAYC,UAAQ,EAA3D,UACA,cAAC,EAAD,CACezD,QAAQ,iBAAgBD,UAAU,QADjD,SAEC,cAACoD,EAAA,EAAKO,MAAN,qBAEG,cAACP,EAAA,EAAKQ,QAAN,CAAcE,KAAK,OAAO/B,KAAK,OAAO4C,YAAY,qBAGvD,eAAC1B,EAAA,EAAMc,OAAP,WACC,cAACC,EAAA,EAAD,CAAQC,QAAQ,oBAAoB,cAAY,oBAAoBlB,QAASF,KAAKX,YAAlF,mBAGA,cAAC8B,EAAA,EAAD,CAAQC,QAAQ,kBAAkB,cAAc,qBAAqBlC,KAAK,SAA1E,SACA,cAAC,EAAD,CAAS9B,QAAQ,mFAAmFD,UAAU,MAA9G,wCAQD,S,GAtLiBd,IAAMC,W,gCCuOdyF,E,kDAvOX,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IAWVwF,QAAU,SAACC,GACP,IAAIlD,EAAWD,SAAS,EAAKtC,MAAM0F,OAAOD,GAAOlD,UAC7CF,EAAaC,SAAS,EAAKtC,MAAM0F,OAAOD,GAAOpD,YAEnDE,GAAsB,EAGlBF,EADU,KAHFC,SAAS,EAAKtC,MAAM0F,OAAOD,GAAOjD,OAI7BF,SAASD,GAAc,GAEvBC,SAASD,GAAc,EAGtCE,GAAY,MACX,EAAKvC,MAAM0F,OAAOD,GAAOlD,SAAWA,EACpC,EAAKvC,MAAM0F,OAAOD,GAAOpD,WAAaA,EACtC,EAAKrC,MAAM2F,sBAAsB,EAAK3F,MAAM0F,UA3BhC,EAgCnBE,QAAU,SAACH,GACP,IAAIlD,EAAWD,SAAS,EAAKtC,MAAM0F,OAAOD,GAAOlD,UAC7CF,EAAaC,SAAS,EAAKtC,MAAM0F,OAAOD,GAAOpD,YAEnDE,GAAsB,EAGlBF,EADU,KAHFC,SAAS,EAAKtC,MAAM0F,OAAOD,GAAOjD,OAI7BF,SAASD,GAAc,GAGvBC,SAASD,GAAc,EAGtCE,GAAY,EACX,EAAKvC,MAAM0F,OAAOG,OAAOJ,EAAM,IAE/B,EAAKzF,MAAM0F,OAAOD,GAAOlD,SAAWA,EACpC,EAAKvC,MAAM0F,OAAOD,GAAOpD,WAAaA,GAEzC,EAAKrC,MAAM2F,sBAAsB,EAAK3F,MAAM0F,SAnD7B,EAuDnBI,WAAa,SAACL,GAEV,EAAKzF,MAAM0F,OAAOG,OAAOJ,EAAM,GAC/B,EAAKzF,MAAM2F,sBAAsB,EAAK3F,MAAM0F,SA1D7B,EAiElBK,OAAS,SAACC,EAASC,GACC,eAAbD,EACD,EAAKhG,MAAM0F,OAAOQ,MAAK,SAACC,EAAEC,GACrB,OAAID,EAAEzD,OAAS0D,EAAE1D,KAAa,EAE1BuD,EACIE,EAAEzD,KAAO0D,EAAE1D,MAAe,EAClB,EAERyD,EAAEzD,KAAO0D,EAAE1D,KAAc,GAChB,KAMF,eAAbsD,EACN,EAAKhG,MAAM0F,OAAOQ,MAAK,SAACC,EAAEC,GAEtB,OAAID,EAAE3D,QAAU4D,EAAE5D,MAAc,EAE5ByD,EACIE,EAAE3D,MAAQ4D,EAAE5D,OAAgB,EACpB,EAER2D,EAAE3D,MAAQ4D,EAAE5D,MAAe,GAClB,KAMH,SAAbwD,EACL,EAAKhG,MAAM0F,OAAOQ,MAAK,SAACC,EAAEC,GAEtB,OAAID,EAAE1B,OAAS2B,EAAE3B,KAAa,EAE1BwB,EACIE,EAAE1B,KAAO2B,EAAE3B,MAAe,EAClB,EAER0B,EAAE1B,KAAO2B,EAAE3B,KAAc,GAChB,KAMH,aAAbuB,GACL,EAAKhG,MAAM0F,OAAOQ,MAAK,SAACC,EAAEC,GACtB,OAAIH,EACIE,EAAE5D,SAAW6D,EAAE7D,UAAmB,EAC1B,EAER4D,EAAE5D,SAAW6D,EAAE7D,SAAkB,GACxB,KAMtB,EAAKvC,MAAM2F,sBAAsB,EAAK3F,MAAM0F,SA3H/C,EAAK1C,MAAQ,CACTqD,YAAa,MACpBC,oBAAoB,EACbC,eAAe,EACfC,oBAAoB,EACpBC,cAAe,GARJ,E,0CAkInB,WAAU,IAAD,OACCC,EAAYlD,KAAKxD,MAAM0F,OACxBK,QAAO,SAACtD,GACL,OAAG,EAAKO,MAAMqD,cAEH5D,EAAMD,QAAU,EAAKQ,MAAMqD,aAAe5D,EAAMC,OAAS,EAAKM,MAAMqD,aAAyC,QAA3B,EAAKrD,MAAMqD,gBAI3G/C,KAAI,SAACb,EAAOxB,GAAR,OACT,qBAAmBnC,GAAI2D,EAAM3D,GAA7B,UACI,6BACI,cAAC,IAAD,CAAOL,UAAU,SAAS,cAAY,YAAYiF,QAAS,EAAKoC,WAAWa,KAAKlE,EAAMxB,OAE1F,6BAAKwB,EAAMC,OACX,+BACG,cAAC,IAAD,CAAMjE,UAAU,QAAQ,cAAY,SAASiF,QAAS,EAAK8B,QAAQmB,KAAKlE,EAAMxB,KAC7EwB,EAAMF,SACP,cAAC,IAAD,CAAM9D,UAAU,QAAQ,cAAY,WAAWiF,QAAS,EAAKkC,QAAQe,KAAKlE,EAAMxB,QAEnF,6BAAKwB,EAAMD,QACX,6BAAKC,EAAMJ,eAXNI,EAAM3D,OAgBf,OACS0E,KAAKxD,MAAM0F,OAAOkB,OAAS,EAChC,gCAEI,eAAC7C,EAAA,EAAKI,MAAN,CAAY1F,UAAU,OAAO2F,UAAU,YAAYC,UAAQ,EAA3D,UAER,cAACN,EAAA,EAAKO,MAAN,8BACwB,cAAC,EAAD,CAAS1D,QAAQ,mEAAmED,UAAU,QAA9F,SACI,qBAAKjC,IAAKiF,EAAM/E,IAAI,uBAAuBC,MAAM,KAAKQ,OAAO,SAEzF,eAAC0E,EAAA,EAAKQ,QAAN,CAAcC,GAAG,SAASC,KAAK,QACPoC,SAAU,SAAAC,GACN,EAAKhE,SAAS,CAAEuD,YAAaS,EAAE/E,OAAOJ,SAE1ClD,UAAU,QAJlC,UAKC,wBAAQkD,MAAM,MAAd,iBAC2B,wBAAQA,MAAM,KAAd,gBAC3B,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,iBAAd,4BACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,gBAAd,iCAGG,wBAAOlD,UAAU,kCAAkCK,GAAG,YAAtD,UACI,uBAAOL,UAAU,YAAjB,SACKiI,EAAUE,OAAS,GAAI,qBAAI,cAAY,eAAhB,UACpB,uBACA,qBAAIG,MAAM,MAAV,UAEhB,cAAChD,EAAA,EAAKO,MAAN,yBAFgB,IAEoB,yBACd,eAACP,EAAA,EAAKO,MAAN,CAAY7F,UAAU,0BAA0BgG,KAAK,gBAAiBf,QAAS,SAAAoD,GACzE,EAAKhE,SAAS,CAAEwD,oBAAqB,EAAKtD,MAAMsD,mBAAmBC,eAAc,EAASC,oBAAoB,EAAOC,cAAe,IACpI,EAAKV,OAAO,aAAa,EAAK/C,MAAMsD,qBAF1C,cAIQ,mBAAGU,MAAOxD,KAAKR,MAAMsD,mBAAmB,WAAY,eAJ5D,UAMN,qBAAIS,MAAM,MAAV,UACA,cAAChD,EAAA,EAAKO,MAAN,uBADA,IACkC,yBAClC,eAACP,EAAA,EAAKO,MAAN,CAAY7F,UAAU,0BAA0BgG,KAAK,gBAAiBf,QAAS,SAAAoD,GACnE,EAAKhE,SAAS,CAACyD,eAAc,EAASD,oBAAoB,EAAOE,oBAAoB,EAAOC,cAAe,EAAKzD,MAAMyD,eAEtH,EAAKV,OAAO,WAAW,EAAK/C,MAAMyD,eAH9C,UAKa,mBAAGO,MAAOxD,KAAKR,MAAMyD,aAAa,WAAY,eAL3D,UAQA,qBAAIM,MAAM,MAAV,UACA,cAAChD,EAAA,EAAKO,MAAN,qBADA,IACgC,yBAChC,eAACP,EAAA,EAAKO,MAAN,CAAY7F,UAAU,0BAA0BgG,KAAK,gBAAiBf,QAAS,SAAAoD,GACnE,EAAKhE,SAAS,CAAEyD,eAAc,EAAQD,oBAAoB,EAAOE,oBAAqB,EAAKxD,MAAMwD,mBAAoBC,cAAe,IACpI,EAAKV,OAAO,aAAa,EAAK/C,MAAMwD,qBAFhD,cAIc,mBAAGQ,MAAOxD,KAAKR,MAAMwD,mBAAmB,WAAY,qBAElE,oBAAIO,MAAM,MAAV,SACA,cAAChD,EAAA,EAAKO,MAAN,iCAIR,gCAEKoC,UAKnB,S,GAlOsB7G,IAAMC,W,gCCDTmH,E,4MAGjBC,UAAY,SAACC,GAGT,IAFA,IAAMC,EAAS,EAAKpH,MAAMqH,WACtBC,EAAO,GACF7B,EAAQ,EAAGA,EAAQ2B,EAAOR,OAAQnB,IACpC0B,EAAMA,MAAMrI,KAAOsI,EAAO3B,GAAO3G,IAChCwI,EAAKlE,KAAKgE,EAAO3B,IAIzB,EAAKzF,MAAMuH,eAAeD,I,4CAG9B,WAGI,OACI9D,KAAKxD,MAAMqF,QACP,8BAEA,cAAC,IAAD,CAEAmC,QAAS,CAAEC,IAAeC,IAAoBC,KAE9CC,WAAapE,KAAK0D,UAGlBW,YAAc,cACdC,cAAe,CACX3C,IAAK,kDAET4C,MAAS,CACLC,YAAa,CACRtF,KAAM,eACNuF,SAAU,CAAEC,KAAM,GAClBC,WAAY,YAGrBf,OAAQ5D,KAAKxD,MAAMqH,eAKvB,S,GA7C+BvH,aCFrCsI,G,kNAEF7G,cAAgB,SAACC,GAGb,IAAIC,EAAa,EACjB,OAAQD,GACJ,IAAK,eAGL,IAAK,iBACDC,EAAa,GACb,MACJ,IAAK,cAGL,IAAK,kBAGL,IAAK,gBACDA,EAAa,EACb,MACJ,QACIA,EAAa,EAGrB,OAAOA,G,EAIX4G,cAAgB,SAAC3C,GAEb,IADA,IAAI4C,EAAa,EACRrH,EAAI,EAAGA,EAAIyE,EAAOkB,OAAQ3F,IAAK,CAKpCqH,GAHiB,EAAK/G,cAAcmE,EAAOzE,GAAGuB,OAC/BF,SAASoD,EAAOzE,GAAGsB,UAItC,OAAO+F,G,EAIXC,YAAc,SAACC,EAAM9C,GAEjB,IASI+C,EATYnG,SAASkG,EAAKE,QAChBpG,SAASkG,EAAKG,MAMX,EAAKN,cAAc3C,GAIpC,OAAI+C,GAIG,M,4CAKX,WAEI,IAAMG,EAAOpF,KAAK+E,YAAY/E,KAAKxD,MAAMwI,KAAMhF,KAAKxD,MAAM0F,QAE1D,OAEI,sBAAKjH,UAAU,OAAf,UACI,cAAC,EAAD,CACEmC,QAAQ,qDAAqDD,UAAU,MADzE,SAEI,qBAAKlC,UAAU,cAAf,uCAEJ,sBAAKK,GAAG,UAAUL,UAAU,YAA5B,UACA,cAAC,EAAD,CACEmC,QAAQ,mEAAmED,UAAU,MADvF,SAEI,2CAEA,oBAAI,cAAY,SAASlC,UAAWmK,EAAO,EAAI,UAAY,GAA3D,SAAyE,OAATA,EAAgBA,EAAKC,QAAQ,GAAKD,c,GAjFjG/I,IAAMC,YA2FZsI,ICzFTU,G,kNAEFzH,OAAS,SAAC0H,EAAIC,GAChB,IAAIC,EAAQD,EAAMD,EACdG,EAAO/H,KAAKE,SAChB,OAAQ0H,EAAM5H,KAAKgI,MAAMD,EAAOD,I,EAI9BG,gBAAkB,WAGd,IAAIC,EAAa,EAAKhI,OAAO,EAAE,IAC3BiI,EAAgB,EAAKjI,OAAO,EAAE,IAG9BmH,EAAM,CACNe,KAAK,uBACLZ,KAAMU,EACNG,QAAQF,EACRZ,OANe,EAAKrH,OAAO,EAAEiI,IAUjC,EAAKtJ,MAAMyJ,aAAajB,I,4CAI5B,WAGI,OACE,gCAGE,wBAAQ9F,KAAK,SAASjE,UAAU,0BAA0B,cAAY,YAAYiF,QAASF,KAAK4F,gBAAhG,6BACA,cAAC,EAAD,CAASxI,QAAQ,qDAAqDD,UAAU,QAAhF,SACI,qBAAKjC,IAAKiF,EAAM/E,IAAI,qBAAqBC,MAAM,KAAKQ,OAAO,gB,GArC9CQ,IAAMC,YA4CpBgJ,IC9CTY,E,4MAGFC,eAAiB,SAACjE,GAGd,IAFA,IAAIkE,EAAc,EAET3I,EAAI,EAAGA,EAAIyE,EAAOkB,OAAQ3F,IAAK,CACpC,IAAIoB,EAAaC,SAASoD,EAAOzE,GAAGoB,YACb,OAAnBqD,EAAOzE,GAAGyB,KACVkH,GAA4B,GAAbvH,EACW,QAAnBqD,EAAOzE,GAAGyB,KACjBkH,GAA4B,GAAbvH,EAEfuH,GAA4B,GAAbvH,EAIvB,OAAOuH,G,4CAIX,WAEI,IAAMA,EAAcpG,KAAKmG,eAAenG,KAAKxD,MAAM0F,QACnD,OAEQlC,KAAKxD,MAAM6J,WAEX,sBAAKpL,UAAU,YAAf,UAII,cAAC,EAAD,CAASmC,QAAQ,uEAAuED,UAAU,MAAlG,SACA,qBAAKlC,UAAU,cAAf,oCAEA,cAAC,EAAD,CAASmC,QAAQ,2FAA2FD,UAAU,OAAtH,SACA,qBAAK7B,GAAG,SAASL,UAAU,YAA3B,SACI,qBAAI,cAAY,sBAAhB,cAAwCmL,YAKpD,S,GA1Cc/J,IAAMC,WAgDjB4J,ICjDTI,E,4MAGFC,YAAc,SAACrE,GAGX,IAFA,IAAIsE,EAAgB,EAEX/I,EAAI,EAAGA,EAAIyE,EAAOkB,OAAQ3F,IAAK,CACpC,IAAIoB,EAAaC,SAASoD,EAAOzE,GAAGoB,aACZ,iBAApBqD,EAAOzE,GAAGuB,OAEiB,gBAApBkD,EAAOzE,GAAGuB,SADjBwH,GAAiB3H,GAMzB,OAAO2H,G,EAGXC,gBAAkB,SAACvE,GAGf,IAFA,IAAIwE,EAAoB,EAEfjJ,EAAI,EAAGA,EAAIyE,EAAOkB,OAAQ3F,IAAK,CACpC,IAAIoB,EAAaC,SAASoD,EAAOzE,GAAGoB,YACZ,oBAApBqD,EAAOzE,GAAGuB,QACV0H,GAAqB7H,GAI7B,OAAO6H,G,EAEXC,cAAgB,SAACzE,GAGb,IAFA,IAAI0E,EAAkB,EAEbnJ,EAAI,EAAGA,EAAIyE,EAAOkB,OAAQ3F,IAAK,CACpC,IAAIoB,EAAaC,SAASoD,EAAOzE,GAAGoB,aACZ,mBAApBqD,EAAOzE,GAAGuB,OAEiB,kBAApBkD,EAAOzE,GAAGuB,SADjB4H,GAAmB/H,GAM3B,OAAO+H,G,4CAGX,WAEI,IAAMJ,EAAgBxG,KAAKuG,YAAYvG,KAAKxD,MAAM0F,QAC5CwE,EAAoB1G,KAAKyG,gBAAgBzG,KAAKxD,MAAM0F,QACpD0E,EAAkB5G,KAAK2G,cAAc3G,KAAKxD,MAAM0F,QACtD,OACIlC,KAAKxD,MAAM0F,OAAOkB,OAAS,EAC3B,gCACI,sBAAKnI,UAAU,YAAf,UAEA,cAAC,EAAD,CACEmC,QAAQ,uDAAsDD,UAAU,MAD1E,SAEI,qBAAKlC,UAAU,cAAf,gCAEA,qBAAKK,GAAG,WAAWL,UAAU,YAA7B,SACI,6BAAKuL,SAIb,sBAAKvL,UAAU,YAAf,UACA,cAAC,EAAD,CACEmC,QAAQ,6DAA4DD,UAAU,MADhF,SAEI,qBAAKlC,UAAU,cAAf,mCAEA,qBAAKK,GAAG,eAAeL,UAAU,YAAjC,SACI,6BAAKyL,SAIb,sBAAKzL,UAAU,YAAf,UACA,cAAC,EAAD,CACEmC,QAAQ,2EAA0ED,UAAU,MAD9F,SAEI,qBAAKlC,UAAU,cAAf,kCAEA,qBAAKK,GAAG,aAAaL,UAAU,YAA/B,SACI,6BAAK2L,YAKf,S,GArFYvK,IAAMC,WA0FjBgK,ICkTAO,E,kDA5Xb,WAAYrK,GAAQ,IAAD,8BACjB,cAAMA,IAgCRsK,kBAAoB,SAAC7H,GACnB,EAAKK,SAAS,CAAE4C,OAAQjD,KAlCP,EAoCnB8H,qBAAuB,SAACpD,GACtB,EAAKrE,SAAS,CAAE0H,UAAWrD,KArCV,EAwCnBsD,eAAiB,SAACC,GAChB,IAAIC,EAAS,sBAAO,EAAK3H,MAAM0C,QAAlB,CAA0BgF,IACvC,EAAK5H,SAAS,CAAE4C,OAAQiF,KA1CP,EA6CnBC,eAAiB,SAACC,GAChB,EAAK/H,SAAS,CAAC0H,UAAWK,KA9CT,EAiDnBC,kBAAoB,SAACJ,GAGrB,GAAsB,OAAnBA,EAAUhI,KAAc,CACvB,IAAI0E,EAAM,sBAAO,EAAKpE,MAAM+H,UAAlB,CAA4B,CAACC,MAAON,EAAUjG,KAAK,KAAKiG,EAAUhI,KAAMwC,MAAOwF,EAAUxF,MAAOC,IAAIuF,EAAUvF,IAAKC,UAAWsF,EAAUtF,UAAWH,gBAAiByF,EAAUzF,mBACxL,EAAKnC,SAAS,CAAEiI,SAAU3D,SACxB,GAAsB,QAAnBsD,EAAUhI,KAAe,CAC9B,IAAI0E,EAAM,sBAAO,EAAKpE,MAAMiI,WAAlB,CAA6B,CAACD,MAAON,EAAUjG,KAAK,KAAKiG,EAAUhI,KAAMwC,MAAOwF,EAAUxF,MAAOC,IAAIuF,EAAUvF,IAAKC,UAAWsF,EAAUtF,UAAWH,gBAAiByF,EAAUzF,mBACzL,EAAKnC,SAAS,CAAEmI,UAAW7D,SACzB,GAAsB,eAAnBsD,EAAUhI,KAAsB,CACxC,IAAI0E,EAAM,sBAAO,EAAKpE,MAAMkI,UAAlB,CAA4B,CAACF,MAAON,EAAUjG,KAAK,KAAKiG,EAAUhI,KAAMwC,MAAOwF,EAAUxF,MAAOC,IAAIuF,EAAUvF,IAAKC,UAAWsF,EAAUtF,UAAWH,gBAAiByF,EAAUzF,mBACrL,EAAKnC,SAAS,CAAEoI,SAAU9D,IAG5B,IAAI+D,EAAS,sBAAO,EAAKnI,MAAMwH,WAAlB,CAA6B,CAAC1L,GAAI4L,EAAU5L,GAAG4D,KAAKgI,EAAUhI,KAAMsI,MAAON,EAAUjG,KAAK,KAAKiG,EAAUhI,KAAMwC,MAAOwF,EAAUxF,MAAOC,IAAIuF,EAAUvF,IAAKC,UAAWsF,EAAUtF,UAAWH,gBAAiByF,EAAUzF,mBAClO,EAAKnC,SAAS,CAAE0H,UAAWW,KAhEV,EAmEnBC,iBAAmB,SAAC5C,GAClB,EAAK1F,SAAS,CAAE0F,KAAMA,KApEL,EA+GnB6C,wBAA0B,SAAClE,GACzB,IACMxF,EADSwF,EAAMpF,OACAuJ,QAErB,EAAKxI,UAAS,SAACyI,GACItJ,OAAOuJ,OAAO,GAAID,EAAU1B,YAE7C,MAAO,CAAEA,WADIlI,OArHE,EA0HnB8J,qBAAuB,SAACtE,GACtB,IACMxF,EADSwF,EAAMpF,OACAuJ,QAErB,EAAKxI,UAAS,SAACyI,GACCtJ,OAAOuJ,OAAO,GAAID,EAAUlG,SAE1C,MAAO,CAAEA,QADC1D,OAhIK,EAuInB+J,eAAiB,SAACjH,EAAMkH,GACtB,IAAMC,EAAY,GAoBlB,OAnBAD,EAAMrJ,SAASqJ,GACF,SAATlH,EAEGkH,GAAe,KAARA,GACHA,EAAM,GAAKA,EAAM,MACxBC,EAAUjD,KAAO,mCAFKiD,EAAUjD,KAAO,wBAGvB,YAATlE,EAEJkH,GAAe,KAARA,GAEHA,EAAM,GAAKA,EAAM,MACxBC,EAAUpC,QAAU,6CAFpBoC,EAAUpC,QAAU,kCAGJ,WAAT/E,IAEJkH,GAAe,KAARA,EACHA,EAAM,EAAGC,EAAUlD,OAAS,+BAC5BiD,EAAM,EAAK3I,MAAMwF,KAAKgB,UAC7BoC,EAAUlD,OAAS,sDAHGkD,EAAUlD,OAAS,2BAKtCkD,GA1JP,EAAK5I,MAAQ,CACX6I,QAAS,GACTC,SAAU,eACVC,IAAK,GACLC,OAAQ,CAAE,aAAc,UACxBtG,OAAQ,GACRT,gBAAiB,CAAC,UAAU,UAAU,UAAU,UAAU,WAC1D4E,YAAY,EACZxE,SAAS,EACTmF,UAAW,GACXO,SAAU,GACVE,UAAW,GACXC,SAAU,GACV1C,KAAM,CACJe,KAAM,GACNZ,KAAM,GACNa,QAAS,GACTd,OAAQ,IAEVuD,OAAQ,CACNtD,KAAM,GACNa,QAAS,GACTd,OAAQ,KAIZ,EAAKwD,kBAAoB,EAAKA,kBAAkBvF,KAAvB,gBA5BR,E,qDAuEnB,SAAkBQ,GAChB,IAAMpF,EAASoF,EAAMpF,OACfJ,EAAQI,EAAOJ,MACf8C,EAAO1C,EAAO0C,KAEhBmH,EAAY,GAEH,SAATnH,IACFmH,EAAYpI,KAAKkI,eAAejH,EAAM9C,GAGlCM,OAAOkK,KAAKP,GAAWhF,OAAS,GAClCpD,KAAKV,UAAS,SAACyI,GACb,IAAIU,EAAShK,OAAOuJ,OAAO,GAAID,EAAUU,QAEzC,OADAA,EAAOxH,GAAQmH,EAAUnH,GAClB,CAAEwH,cAMfzI,KAAKV,UAAS,SAACyI,GACb,IAAI/C,EAAOvG,OAAOuJ,OAAO,GAAID,EAAU/C,MACvCA,EAAK/D,GAAQ9C,EACA,YAAT8C,IAEF+D,EAAI,OAAa7G,GAInB,IAAIsK,EAAShK,OAAOuJ,OAAO,GAAID,EAAUU,QAKzC,OAJMA,EAAOxH,IAASwH,EAAOxH,KAAUmH,EAAUnH,KAC/CwH,EAAOxH,GAAQ,MAGV,CAAE+D,OAAMyD,e,oBAyDnB,WAEE,OACE,sBAAKxN,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,CAAgBgL,aAAcjG,KAAK4H,qBAGrC,qBAAK3M,UAAU,gBAAf,SACE,sBAAKA,UAAU,eAAf,UAEI,kCACE,uBACEiE,KAAK,WAEL5D,GAAG,aACHsN,MAAM,cACN3H,KAAK,aACL,cAAY,gBACZ6G,QAAS9H,KAAKR,MAAM6G,WACpBhD,SAAUrD,KAAK6H,0BATnB,iBAcA,cAAC,EAAD,CACEzK,QAAQ,qCACRD,UAAU,OAFZ,SAIE,qBAAKjC,IAAKiF,EAAM/E,IAAI,iBAAiBC,MAAM,KAAKQ,OAAO,SAE1D,uBACD,kCACI,uBACEqD,KAAK,WACL5D,GAAG,UACHsN,MAAM,gBACN3H,KAAK,UACL,cAAY,aACZ6G,QAAS9H,KAAKR,MAAMqC,QACpBwB,SAAUrD,KAAKiI,uBARrB,mBAaE,cAAC,EAAD,CACE7K,QAAQ,2DACRD,UAAU,OAFZ,SAIE,qBAAKjC,IAAKiF,EAAM/E,IAAI,iBAAiBC,MAAM,KAAKQ,OAAO,SAG3D,gCAKN,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,cAAC,EAAD,CAAQiH,OAAQlC,KAAKR,MAAM0C,OAAQ8C,KAAMhF,KAAKR,MAAMwF,OACpD,cAAC,EAAD,CACE9C,OAAQlC,KAAKR,MAAM0C,OACnBmE,WAAYrG,KAAKR,MAAM6G,aAEzB,cAAC,EAAD,CAAanE,OAAQlC,KAAKR,MAAM0C,YAOlC,sBAAKjH,UAAU,mCAAf,UACE,eAACsF,EAAA,EAAD,CAAMtF,UAAU,MAAM4N,YAAU,EAAhC,UACE,sBAAK5N,UAAU,qBAAf,UAEE,cAAC,EAAD,CACEmC,QAAQ,qCACRD,UAAU,QAFZ,SAGE,cAACoD,EAAA,EAAKO,MAAN,CAAYgI,QAAQ,OAApB,6BAEA,cAACvI,EAAA,EAAKQ,QAAN,CACE7B,KAAK,OACL+B,KAAK,OACL3F,GAAG,OACH,cAAY,UACZwG,YAAY,gBACZuB,SAAUrD,KAAK0I,kBACfvK,MAAO6B,KAAKR,MAAMwF,KAAKe,UAO7B,sBAAK9K,UAAU,qBAAf,UACA,cAAC,EAAD,CACImC,QAAQ,wDAAwDD,UAAU,MAD9E,SAEE,cAACoD,EAAA,EAAKO,MAAN,CAAYgI,QAAQ,UAApB,8BAEA,cAACvI,EAAA,EAAKQ,QAAN,CACE7B,KAAK,SACL+B,KAAK,UACL3F,GAAG,UACH,cAAY,aACZwG,YAAY,iBACZuB,SAAUrD,KAAK0I,kBACfvK,MAAO6B,KAAKR,MAAMwF,KAAKgB,QACvB+C,YAAa/I,KAAKR,MAAMiJ,OAAOzC,UAEjC,eAACzF,EAAA,EAAKQ,QAAQiI,SAAd,CAAuB9J,KAAK,UAA5B,UACG,IACAc,KAAKR,MAAMiJ,OAAOzC,QAAS,UAIhC,sBAAK/K,UAAU,qBAAf,UAEA,cAAC,EAAD,CACImC,QAAQ,uEAAuED,UAAU,QAD7F,SAEE,cAACoD,EAAA,EAAKO,MAAN,CAAYgI,QAAQ,OAApB,oBAEA,cAACvI,EAAA,EAAKQ,QAAN,CACE7B,KAAK,SACL+B,KAAK,OACL3F,GAAG,OACH,cAAY,UACZwG,YAAY,OACZuB,SAAUrD,KAAK0I,kBACfvK,MAAO6B,KAAKR,MAAMwF,KAAKG,KACvB4D,YAAa/I,KAAKR,MAAMiJ,OAAOtD,OAEjC,eAAC5E,EAAA,EAAKQ,QAAQiI,SAAd,CAAuB9J,KAAK,UAA5B,UACG,IACAc,KAAKR,MAAMiJ,OAAOtD,KAAM,UAI7B,sBAAKlK,UAAU,qBAAf,UAEA,cAAC,EAAD,CACImC,QAAQ,oFACND,UAAU,QAFhB,SAGE,cAACoD,EAAA,EAAKO,MAAN,CAAYgI,QAAQ,SAApB,sBAEA,cAACvI,EAAA,EAAKQ,QAAN,CACE7B,KAAK,SACL+B,KAAK,SACL3F,GAAG,SACH,cAAY,YACZwG,YAAY,SACZuB,SAAUrD,KAAK0I,kBACfvK,MAAO6B,KAAKR,MAAMwF,KAAKE,OACvB6D,YAAa/I,KAAKR,MAAMiJ,OAAOvD,SAEjC,eAAC3E,EAAA,EAAKQ,QAAQiI,SAAd,CAAuB9J,KAAK,UAA5B,UACG,IACAc,KAAKR,MAAMiJ,OAAOvD,OAAQ,aAKjC,qBAAKjK,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,CACEgO,cAAejJ,KAAK8G,kBACpB1H,WAAYY,KAAKiH,eACjB/E,OAAQlC,KAAKR,MAAM0C,OACnBT,gBAAmBzB,KAAKR,MAAMiC,gBAC9BG,UAAa5B,KAAKR,MAAMoC,UACxB3B,QAAWD,KAAKR,MAAM6G,iBAK5B,qBAAKpL,UAAU,YAAf,SACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEiH,OAAQlC,KAAKR,MAAM0C,OACnBC,sBAAuBnC,KAAK8G,8BAMtC,qBAAK7L,UAAU,MAAf,SACM,qBAAKA,UAAU,iBAAf,SACE,cAACiO,EAAD,CACE9J,WAAYY,KAAKsH,kBACjB6B,UAAWnJ,KAAK+G,qBAChB7E,OAAQlC,KAAKR,MAAM0C,OACnBT,gBAAmBzB,KAAKR,MAAMiC,gBAC9BG,UAAa5B,KAAKR,MAAMoC,UACxBC,QAAS7B,KAAKR,MAAMqC,cAI9B,qBAAKvG,GAAG,WAAR,SAGI,cAAC,EAAD,CACAuI,WAAY7D,KAAKR,MAAMwH,UACvBnF,QAAS7B,KAAKR,MAAMqC,QACpBuH,GAAIpJ,KAAKR,MAAMiC,gBACfsC,eAAkB/D,KAAKoH,0B,GAlXZ/K,IAAMC,WChBd,G,MAAA,IAA0B,wD,mCCMnCmE,G,4MAEF4I,SAAW,WACPC,QAAQC,IAAI,kBACZC,OAAOC,SAASC,U,4CAGpB,WACI,OAEI,mCACI,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAX,SACI,eAACC,GAAA,EAAD,WACI,qBAAK3O,IAAKiF,EAAM/E,IAAI,OAAO,cAAY,SAAS8E,QAASF,KAAKqJ,WAC9D,eAACS,GAAA,EAAD,CAAK7O,UAAU,UAAf,UACI,cAAC,KAAD,CAAMA,UAAU,qBAAqB8O,GAAG,IAAxC,kBACA,cAAC,KAAD,CAAM9O,UAAU,qBAAqB8O,GAAG,SAAxC,mBACA,cAACD,GAAA,EAAIE,KAAL,CAAU/O,UAAU,YAAYO,KAAK,sCAArC,4CAQZ,qBAAKP,UAAU,oCAAf,SACI,6E,GA1BCoB,IAAMC,WAmCZmE,M,MChCAS,OANf,WACI,OACI,wBAAQ5F,GAAG,SAAX,kFCqBO2O,OAlBf,WAEE,OACE,qBAAKhP,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACI,gCACA,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiP,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,YAGpC,cAAC,GAAD,UCRSC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.4ebcc8d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/budget.adcb126c.jpeg\";","export default __webpack_public_path__ + \"static/media/error.eba8aeea.jpeg\";","export default __webpack_public_path__ + \"static/media/initialpg.11b079f6.jpeg\";","export default __webpack_public_path__ + \"static/media/input.a9a76a69.jpeg\";","export default __webpack_public_path__ + \"static/media/shifts.fff9adcb.jpeg\";","export default __webpack_public_path__ + \"static/media/staffModal.211817ac.jpeg\";","export default __webpack_public_path__ + \"static/media/sdp-logo-infinity.5f20fc5c.png\";","import React from 'react';\nimport './About.css';\nimport { Card, Figure } from 'react-bootstrap';\nimport budget from '../../assets/budget.jpeg';\nimport error from '../../assets/error.jpeg';\nimport initialpg from '../../assets/initialpg.jpeg';\nimport input from '../../assets/input.jpeg';\nimport shifts from '../../assets/shifts.jpeg';\nimport staffModal from '../../assets/staffModal.jpeg';\n\nimport logoIn from \"../../assets/sdp-logo-infinity.png\";\n\n\nclass About extends React.Component {\n\n    \n\n    render() {\n        return (\n            <div className=\"container\">\n\n                <div className=\"row mt-3\">\n                    <h3>Senior Design Project</h3>\n                    <h3>CS 481 Spring 2022</h3>\n                    <h3>Boise State University</h3>\n                </div>\n                <div className=\"row mt-3\">\n                    <h4>Project Members</h4>\n                    <p>Spring 2022: Derek Valenzuela, Jonathan McLeod, Andrew Gerber, and Chinwendum Njoku</p>\n                    <p>Fall 2021: Emma Lytle, Lih Wei Liang, and Becka Seevers</p>\n                </div>\n\n                <img src={logoIn} alt=\"senior design project logo\" width=\"300px\"/>\n        <div id=\"sdp_info\" onmouseleave=\"$('#sdp_info').css('visibility', 'collapse')\">\n            <br/>\n            <h4>Site Information:</h4>\n            This website was created for a<br/>\n            Boise State University<br/>\n            Computer Science Senior Design Project by<br/><br/>\n            Fall 2021:<br/>\n\n            <p>Emma Lytle, Lih Wei Liang, and Becka Seevers</p><br/>\n            Spring 2022:<br/>\n            <p> Derek Valenzuela, Andrew Gerber, Jonathan McLeod, and Chinwendum Njoku\n            </p>\n            For information about sponsoring a project go to<br/>\n            <a href=\"https://www.boisestate.edu/coen-cs/community/cs481-senior-design-project/\">https://www.boisestate.edu/coen-cs/community/cs481-senior-design-project/</a>\n        </div>\n        main\n                <div className=\"row mt-3\">\n                    <h4>Sponsor</h4>\n                    <p>Dr. Renee Walters - reneewalters@boisestate.edu</p>\n                </div>\n                <div className=\"row mt-3\">\n                    <h4>Project Statement</h4>\n                    <p>The goal of the Inpatient Nurse Staffing Simulator was to create an interactive interface that will help Boise State nursing students simulate how to staff a hospital unit.\n                    </p>\n                </div>\n                <div className=\"row mt-3\">\n                    <h4>Project Description</h4>\n                    <p>\n                        The Boise State Nursing Department requires that students practice staffing a hospital unit. In the past, students were given scenarios\n                        and they were expected to calculate the HPPD, which is the measurement of the average number of hours needed to care for each patient on the unit. After calculating\n                        the HPPD, students then fill out their staffing choices and subtract the hours staffed from the HPPD to determine how many hours they have left in the budget. The goal\n                        is to staff the unit so that the HPPD is met, or is 0. If HPPD is a negative value, the unit is overstaffed and if it is positive, then it is understaffed. The purpose\n                        of the simulator was to take the math component out of the equation, to allow students to just focus on allocating resources appropriately. The simulator will usually be\n                        used in class where the instructor is providing the scenario values, but students have the option to create values with the \"Random Scenario\" button for more practice.\n                        Students have the option of putting staff into a generated calendar which will provide the student with a visual representation of the scenario.\n                    </p>\n                    <p>\n                        Students can prepopulate the hospital staffing scenario fields by clicking the \"Random Scenario\" button or they can enter values manually.\n                        Once values are entered in the scenario fields, the HPPD value will change in the \"Hours Remaining in the Day\" box. Students are then expected to add staff members to determine how to\n                        staff for this scenario while still remaining within budget. If they schedule too many staff members, the HPPD value will become negative and display red.\n                        Students can also choose to show the salary budget by selecting the \"Show Budget\" checkbox. This will display the total cost to staff the unit based off of their staffing decisions.\n                        For this application's calculations, RNs are $35/hour, LVNs are $24/hour, and Unlicensed are $15/hour. Once students add staff members, they appear in the table as well as the calendar\n                        below the scenario fields and total staff hours for each shift are shown to the right of the page. Calculations used for this project are shown below:\n                    </p>\n                    <Card className=\"mb-4\">\n                        <Card.Body>\n                            <h6>Calculating HPPD</h6>\n                            <p>totalHPPD = (numberPatients * inputHPPD) - totalStaffHours</p>\n                            <h6>Calculating Staff Budgets</h6>\n                            <p>totalBudget = totalRNs * 35 + totalLVNs * 24 + totalUnlicensed * 15</p>\n                        </Card.Body>\n                    </Card>\n                    <p>\n                        This project is written in ReactJS and hosted on Github Pages. ReactJS was chosen as the framework for this project because it is a popular web development framework and we, as a team,\n                        wanted to gain more experience with it, as well as it is useful when creating responsive web pages. With ReactJS, it is important to keep components simple as each of them are considered\n                        building blocks that stack on top of one another. We built our file structure as follows:\n                    </p>\n                    <Card className=\"mb-4\">\n                        <Card.Body>\n                            <ul>\n                                <li>Index.js </li>\n                                <ul>\n                                    <li>App.js</li>\n                                    <ul>\n                                        <li>Header.js </li>\n                                        <li>Scenario.js </li>\n                                        <ul>\n                                            <li>EvenCalendar.js </li>\n                                            <li>RandomHPPDInfo.js </li>\n                                            <li>Result.js</li>\n                                            <li>Scenario.js </li>\n                                            <li>StaffBudget.js </li>\n                                            <li>ShiftTotals.js </li>\n                                            <li>StaffAdd.js </li>\n                                            <li>StaffList.js  </li>\n                                            <li>Tooltip.js  </li>\n                                        </ul>\n                                        <li>About.js </li>\n                                        <li>Footer.js</li>\n                                    </ul>\n                                </ul>\n                            </ul>\n                        </Card.Body>\n                    </Card>\n                    <p>\n                        State was used to pass information between components, such as adding a new staff member updates the state, which allows StaffList.js to\n                        display that new staff member in the table below the scenario. React-Bootstrap was used in all of our styling to keep it consistent between developers.\n                        React-Bootstrap also has a lot of documentation on how to write the HTML tags and classes to utilize their various styling options. NPM was used as\n                        the package manager and to build, test, run, and deploy the web application.\n                    </p>\n                    <p>\n                        Here are some example screenshots from the web application:\n                    </p>\n                    <Figure>\n                        <Figure.Image\n                            width=\"60%\"\n                            height=\"60%\"\n                            alt=\"Inital load\"\n                            src={initialpg}\n                        />\n                        <Figure.Caption>\n                            Web application on initial load.\n                        </Figure.Caption>\n                    </Figure>\n                    <Figure>\n                        <Figure.Image\n                            width=\"60%\"\n                            height=\"60%\"\n                            alt=\"Page after input is entered\"\n                            src={input}\n                        />\n                        <Figure.Caption>\n                            Web application after scenario information is entered and staff are added.\n                        </Figure.Caption>\n                    </Figure>\n                    <Figure>\n                        <Figure.Image\n                            width=\"60%\"\n                            height=\"60%\"\n                            alt=\"Error handling\"\n                            src={error}\n                        />\n                        <Figure.Caption>\n                            Error handling in form.\n                        </Figure.Caption>\n                    </Figure>\n                    <Figure>\n                        <Figure.Image\n                            width=\"60%\"\n                            height=\"60%\"\n                            alt=\"Staff modal\"\n                            src={staffModal}\n                        />\n                        <Figure.Caption>\n                            Staff modal.\n                        </Figure.Caption>\n                    </Figure>\n                    <Figure>\n                        <Figure.Image\n                            width=\"60%\"\n                            height=\"60%\"\n                            alt=\"Staff shifts\"\n                            src={shifts}\n                        />\n                        <Figure.Caption>\n                            Staff shifts displayed.\n                        </Figure.Caption>\n                    </Figure>\n                    <Figure>\n                        <Figure.Image\n                            width=\"60%\"\n                            height=\"60%\"\n                            alt=\"Budget\"\n                            src={budget}\n                        />\n                        <Figure.Caption>\n                            Budget is displayed.\n                        </Figure.Caption>\n                    </Figure>\n                </div>\n                <div className=\"row mt-3\">\n                    <h4>Technical Details</h4>\n                    <div className=\"container\">\n                        <ul>\n                            <li>ReactJS</li>\n                            <li>React-Bootstrap styling</li>\n                            <li>Hosted on Github Pages</li>\n                            <li>NPM</li>\n                        </ul>\n                    </div>\n                </div>\n                <p><a href=\"https://cs481-ekh.github.io/s22-hospsim/\" >Nurse Staffing Simulator</a> is maintained by <a href=\"https://github.com/cs481-ekh\">Dr. Eric Henderson</a>  - ehenderson@boisestate.edu</p>\n            </div>\n        );\n    }\n}\n\nexport default About;","export default __webpack_public_path__ + \"static/media/noun-help-2492040.f2380c03.png\";","import React, { useState } from \"react\";\nimport \"./Tooltip.css\";\n\nconst Tooltip = (props) => {\n  let timeout;\n  const [active, setActive] = useState(false);\n\n  const showTip = () => {\n    timeout = setTimeout(() => {\n      setActive(true);\n    }, props.delay || 400);\n  };\n\n  const hideTip = () => {\n    clearInterval(timeout);\n    setActive(false);\n  };\n\n  return (\n    <div\n      className=\"Tooltip-Wrapper\"\n      // When to show the tooltip\n      onMouseEnter={showTip}\n      onMouseLeave={hideTip}\n    >\n      {/* Wrapping */}\n      {props.children}\n      {active && (\n        <div className={`Tooltip-Tip ${props.direction || \"top\"}`}>\n          {/* Content */}\n          {props.content}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Tooltip;\n","import React from 'react';\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport './StaffAdd.css';\nimport logo from '../../assets/noun-help-2492040.png';\nimport Tooltip from \"./Tooltip\";\n// import EventCalendar from \"./EventCalendar\";\n\n// also noticing another bug where the url is holding the value of the selected items in the modal. We should look at how to fix this in the next sprint because it might look different after the refactor\nclass StaffAdd extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\topen: false,\n\t\t\tshow: false,\n\t\t};\n\t}\n\n\t//Used to generate an ID for each Staff entry.  We might want ID later to manipulate the staffs collection.\n\tgenerateUUID = () => {\n\t\tvar s = [];\n\t\tvar hexDigits = \"0123456789abcdef\";\n\t\tfor (var i = 0; i < 36; i++) {\n\t\t\ts[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n\t\t}\n\t\ts[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n\t\ts[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n\t\ts[8] = s[13] = s[18] = s[23] = \"-\";\n\t\treturn s.join(\"\");\n\t}\n\tgetShiftValue = (shiftString) => {\n        //considered changing shift to just be 12,...8 so parseint would just work\n        //but additional information from string i.e. day, night might be needed.\n        let shiftValue = 0;\n        switch (shiftString) {\n            case '12 Hours Day':\n                shiftValue = 12;\n                break;\n            case '12 Hours Night':\n                shiftValue = 12;\n                break;\n            case '8 Hours Day':\n                shiftValue = 8;\n                break;\n            case '8 Hours Evening':\n                shiftValue = 8;\n                break;\n            case '8 Hours Night':\n                shiftValue = 8;\n                break;\n            default:\n                shiftValue = 0;\n        }\n\n        return shiftValue;\n    }\n\thandleAdd = (value) => {\n\t\tvalue.preventDefault();\n\t\tconst formData = new FormData(value.target),\n\t\t\tformDataObj = Object.fromEntries(formData.entries())\n\n\t\tvar uuid = this.generateUUID();\n\t\tvar shiftTotal = parseInt(formDataObj.quantity) * this.getShiftValue(formDataObj.shift);\n\n\t\tlet staff = {\n\t\t\tid: uuid,\n\t\t\tquantity: formDataObj.quantity, \n\t\t\ttype: formDataObj.staffType, \n\t\t\tshift: formDataObj.shift, \n\t\t\tshiftTotal: shiftTotal};\n\t\t\n\t\tthis.props.onStaffAdd(staff);\n\t\tthis.handleClose();\n\t}\n\n\t\n\n\thandleClose = () => {\n\t\tthis.setState({ \"show\": false });\n\t}\n\thandleShow = () => {\n\t\tthis.setState({ \"show\": true });\n\t}\n\n\trender() {\n\n\n\t\tlet qtyVals = [];\n\t\tfor (let i = 1; i <= 50; i++) {\n\t\t\tqtyVals.push(i);\n\t\t}\n\t\tconst qtyList = qtyVals.map((qty) =>\n\t\t\t<option key={qty} value={qty}>{qty}</option>\n\t\t);\n\n\t\treturn (\n\t\t\tthis.props.showBud ?\n            <div>  \n\t\t\t<button type=\"button\" className=\"btn btn-outline-primary\" data-testid=\"addstaff-id\" onClick={this.handleShow}>Add Staff to Budget</button>\n\t\t\t<Tooltip content=\"This button adds staff to the budget information used in the staffing simulator\" direction=\"right\">\n                <img src={logo} alt=\"Add Staff Tooltip\" width=\"50\" height=\"50\"/>\n            </Tooltip>\n\t\t\t\t\n\t\t\t\t<Modal animation={false} show={this.state.show} data-testid=\"addStaffModal-id\" onHide={this.handleClose}>\n\t\t\t\t\t<Form onSubmit={this.handleAdd}>\n\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t<Modal.Title>Select your staff member</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"staffType\" required>\n\t\t\t\t\t\t\t<Tooltip\n                  \t\t\t\tcontent=\"Type of staff.\"direction=\"right\">\n\t\t\t\t\t\t\t\t<Form.Label>Staff Type</Form.Label>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"staffType\" className=\"caret\">\n\t\t\t\t\t\t\t\t\t<option value=\"RN\">RN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"LVN\">LVN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Unlicensed\">Unlicensed</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"shiftType\" required>\n\t\t\t\t\t\t\t<Tooltip\n                  \t\t\t\tcontent=\"Type of shift.\"direction=\"right\">\n\t\t\t\t\t\t\t\t<Form.Label>Shift Type</Form.Label>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"shift\" className=\"caret\">\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Day\">12 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Night\">12 Hours Night</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Day\">8 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Evening\">8 Hours Evening</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Night\">8 Hours Night</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"quantity\" required>\n\t\t\t\t\t\t\t<Tooltip\n                  \t\t\t\tcontent=\"Total amount of shift a nurse completes.\"direction=\"right\">\n\t\t\t\t\t\t\t\t<Form.Label>Quantity</Form.Label>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"quantity\">\n\t\t\t\t\t\t\t\t\t{qtyList}\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" data-testid=\"cancelStaffAdd-id\" onClick={this.handleClose}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button variant=\"outline-primary\" data-testid = \"addStaffConfirm-id\" type=\"submit\">\n\t\t\t\t\t\t\t<Tooltip content=\"Adds staff to the staffing simulator.\" direction=\"top\">\n\t\t\t\t\t\t\t\tAdd New Staff\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Button>\t\t\t\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal>\n\t\t\t\t</div>  \n\t\t\t\t: null\n\t\t); \n\t}\n\n\n\n}\nexport default StaffAdd\n","import React from 'react';\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport './StaffAdd.css';\nimport logo from '../../assets/noun-help-2492040.png';\nimport Tooltip from \"./Tooltip\";\n// import EventCalendar from \"./EventCalendar\";\n\n// also noticing another bug where the url is holding the value of the selected items in the modal. We should look at how to fix this in the next sprint because it might look different after the refactor\nclass StaffAdd extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\topen: false,\n\t\t\tshow: false,\n\t\t};\n\t}\n\n\t//Used to generate an ID for each Staff entry.  We might want ID later to manipulate the staffs collection.\n\tgenerateUUID = () => {\n\t\tvar s = [];\n\t\tvar hexDigits = \"0123456789abcdef\";\n\t\tfor (var i = 0; i < 36; i++) {\n\t\t\ts[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n\t\t}\n\t\ts[14] = \"4\";  // bits 12-15 of the time_hi_and_version field to 0010\n\t\ts[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1);  // bits 6-7 of the clock_seq_hi_and_reserved to 01\n\t\ts[8] = s[13] = s[18] = s[23] = \"-\";\n\t\treturn s.join(\"\");\n\t}\n\tgetShiftValue = (shiftString) => {\n        //considered changing shift to just be 12,...8 so parseint would just work\n        //but additional information from string i.e. day, night might be needed.\n        let shiftValue = 0;\n        switch (shiftString) {\n            case '12 Hours Day':\n                shiftValue = 12;\n                break;\n            case '12 Hours Night':\n                shiftValue = 12;\n                break;\n            case '8 Hours Day':\n                shiftValue = 8;\n                break;\n            case '8 Hours Evening':\n                shiftValue = 8;\n                break;\n            case '8 Hours Night':\n                shiftValue = 8;\n                break;\n            default:\n                shiftValue = 0;\n        }\n\n        return shiftValue;\n    }\n\thandleAdd = (value) => {\n\t\tvalue.preventDefault();\n\t\tconst formData = new FormData(value.target),\n\t\t\tformDataObj = Object.fromEntries(formData.entries())\n\n\t\tvar uuid = this.generateUUID();\n\t\tvar shiftTotal = parseInt(formDataObj.quantity) * this.getShiftValue(formDataObj.shift);\n\t\tvar timeStart = formDataObj.date;\n\t\tvar timeEnd = formDataObj.date;\n\t\t//let year = timeStart.substring(0,4)\n\t\t//let month = timeStart.substring(5,7)\n\t\t//let day = timeStart.substring(8,10)\n\t\tvar backgroundColorVar = 'lightgrey';\n\n\t\t//check for day times\n\t\tif(formDataObj.shift === \"12 Hours Day\"){\n\t\t\ttimeStart = timeStart+\"T07:00:00\";\n\t\t\ttimeEnd = timeEnd+\"T19:00:00\";\n\t\t\tbackgroundColorVar = this.props.backgroundColor[0];\n\t\t}else if (formDataObj.shift === \"12 Hours Night\"){\n\t\t\ttimeStart = timeStart+\"T00:00:00\";\n\t\t\ttimeEnd = timeEnd+\"T12:00:00\";\n\t\t\tbackgroundColorVar = this.props.backgroundColor[1];\n\t\t}else if (formDataObj.shift === \"8 Hours Day\"){\n\t\t\ttimeStart = timeStart+\"T07:00:00\";\n\t\t\ttimeEnd = timeEnd+\"T15:00:00\";\n\t\t\tbackgroundColorVar = this.props.backgroundColor[2];\n\t\t}else if (formDataObj.shift === \"8 Hours Evening\"){\n\t\t\ttimeStart = timeStart+\"T15:00:00\";\n\t\t\ttimeEnd = timeEnd+\"T23:00:00\";\n\t\t\tbackgroundColorVar = this.props.backgroundColor[3];\n\t\t}else if (formDataObj.shift === \"8 Hours Night\"){\n\t\t\ttimeStart = timeStart+\"T00:00:00\";\n\t\t\ttimeEnd = timeEnd+\"T08:00:00\";\n\t\t\tbackgroundColorVar = this.props.backgroundColor[4];\n\t\t}\n\n\n\t\n\t\tlet staff = {\n\t\t\tid: uuid,\n\t\t\ttype: formDataObj.staffType, \n\t\t\tshift: formDataObj.shift, \n\t\t\tshiftTotal: shiftTotal, \n\t\t\tstart: timeStart, \n\t\t\tend: timeEnd, \n\t\t\tname: formDataObj.name, \n\t\t\ttextColor: \"black\", \n\t\t\tbackgroundColor: backgroundColorVar};\n\t\t\n\t\tthis.props.onStaffAdd(staff);\n\t\tthis.handleClose();\n\t}\n\n\t\n\n\thandleClose = () => {\n\t\tthis.setState({ \"show\": false });\n\t}\n\thandleShow = () => {\n\t\tthis.setState({ \"show\": true });\n\t}\n\n\trender() {\n\n\n\t\treturn (\n\t\t\tthis.props.showCal ?\n            <div>  \n\t\t\t<button type=\"button\" className=\"btn btn-outline-primary\" data-testid=\"addstaff-id\" onClick={this.handleShow}>Add Staff To Calendar</button>\n\t\t\t<Tooltip content=\"This button adds staff to the budget information used in the staffing simulator\" direction=\"right\">\n                <img src={logo} alt=\"Add Staff Tooltip\" width=\"50\" height=\"50\"/>\n            </Tooltip>\n\t\t\t\t\n\t\t\t\t<Modal animation={false} show={this.state.show} data-testid=\"addStaffModal-id\" onHide={this.handleClose}>\n\t\t\t\t\t<Form onSubmit={this.handleAdd}>\n\t\t\t\t\t\t<Modal.Header>\n\t\t\t\t\t\t\t<Modal.Title>Select your staff member</Modal.Title>\n\t\t\t\t\t\t</Modal.Header>\n\t\t\t\t\t\t<Modal.Body>\n\n\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"name\" required>\n\t\t\t\t\t\t\t<Tooltip\n                  \t\t\t\tcontent=\"Name of staff\"direction=\"right\">\n\t\t\t\t\t\t\t\t<Form.Label>Staff Name</Form.Label>\n\t\t\t\t\t\t\t</Tooltip>\n    \t\t\t\t\t\t\t<Form.Control name=\"name\" type=\"text\"/>\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"staffType\" required>\n\t\t\t\t\t\t\t<Tooltip\n                  \t\t\t\tcontent=\"This enables the nurses schedule staff members based on their license (RN, LVN, UNLICENSED).\"direction=\"right\">\n\t\t\t\t\t\t\t\t<Form.Label>Staff Type</Form.Label>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"staffType\" className=\"caret\">\n\t\t\t\t\t\t\t\t\t<option value=\"RN\">RN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"LVN\">LVN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Unlicensed\">Unlicensed</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"shiftType\" required>\n\t\t\t\t\t\t\t<Tooltip\n                  \t\t\t\tcontent=\"The work schedule that employees complete at different rotations. It can be an 8 hour or a 12 hour rotation.\"direction=\"right\">\n\t\t\t\t\t\t\t\t<Form.Label>Shift Type</Form.Label>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"shift\" className=\"caret\">\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Day\">12 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Night\">12 Hours Night</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Day\">8 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Evening\">8 Hours Evening</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Night\">8 Hours Night</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"dayOfWeek\" required>\n\t\t\t\t\t\t\t<Tooltip\n                  \t\t\t\tcontent=\"Date they work\"direction=\"right\">\n\t\t\t\t\t\t\t\t<Form.Label>Date</Form.Label>\n\t\t\t\t\t\t\t</Tooltip>\n    \t\t\t\t\t\t\t<Form.Control name=\"date\" type=\"text\" placeholder=\"YYYY-MM-DD\" />\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Modal.Body>\n\t\t\t\t\t\t<Modal.Footer>\n\t\t\t\t\t\t\t<Button variant=\"outline-secondary\" data-testid=\"cancelStaffAdd-id\" onClick={this.handleClose}>\n\t\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button variant=\"outline-primary\" data-testid = \"addStaffConfirm-id\" type=\"submit\">\n\t\t\t\t\t\t\t<Tooltip content=\"This button enables nurses add the budget information to the staffing simulator.\" direction=\"top\">\n\t\t\t\t\t\t\t\tAdd New Staff\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Button>\t\t\t\n\t\t\t\t\t\t</Modal.Footer>\n\t\t\t\t\t</Form>\n\t\t\t\t</Modal>\n\t\t\t\t</div>  \n\t\t\t\t: null\n\t\t);\n\t}\n\n\n\n}\nexport default StaffAdd\n","import React from 'react';\nimport './StaffList.css';\nimport { Dash, Plus, Trash } from 'react-bootstrap-icons';\nimport { Form } from \"react-bootstrap\";\nimport logo from '../../assets/noun-help-2492040.png';\nimport Tooltip from \"./Tooltip\";\n\nclass StaffList extends React.Component {\n    constructor(props) {\n        super(props);\n     \n        this.state = { \n            shiftFilter: \"All\",\n\t    filterStaffTypeAsc: false, \n            filterNameAsc: false, \n            filterShiftTypeAsc: false, \n            filterQtyAsc:  false \n        };\n      }\n\n    listAdd = (index) =>{\n        let quantity = parseInt(this.props.staffs[index].quantity)\n        let shiftTotal = parseInt(this.props.staffs[index].shiftTotal)\n        let shift = parseInt(this.props.staffs[index].shift)\n        quantity = quantity + 1\n\n        if (shift === 12) {\n            shiftTotal = parseInt(shiftTotal) + 12;\n        }else{\n            shiftTotal = parseInt(shiftTotal) + 8;\n        }\n       \n       if(quantity <= 100){\n           this.props.staffs[index].quantity = quantity\n           this.props.staffs[index].shiftTotal = shiftTotal\n           this.props.onStaffChangeOnUpdate(this.props.staffs)\n       }\n       \n    }\n\n    listSub = (index) =>{\n        let quantity = parseInt(this.props.staffs[index].quantity)\n        let shiftTotal = parseInt(this.props.staffs[index].shiftTotal)\n        let shift = parseInt(this.props.staffs[index].shift)\n        quantity = quantity - 1;\n\n        if (shift === 12) {\n            shiftTotal = parseInt(shiftTotal) - 12;\n        }\n        else {\n            shiftTotal = parseInt(shiftTotal) - 8;\n        }\n\n       if(quantity <= 0){\n           this.props.staffs.splice(index,1)\n       }else{\n           this.props.staffs[index].quantity = quantity\n           this.props.staffs[index].shiftTotal = shiftTotal\n       }\n        this.props.onStaffChangeOnUpdate(this.props.staffs)\n        // this.props.calChange(this.props.events)\n    }\n\n    listRemove = (index) =>{\n\n        this.props.staffs.splice(index,1)\n        this.props.onStaffChangeOnUpdate(this.props.staffs)\n        // this.props.calChange(this.props.events)\n\n\n    }\n\n     //Sorts the tables.\n     filter = (criteria,isAscend) => {\n        if (criteria === \"staff_type\"){\n           this.props.staffs.sort((a,b)=> {\n                if (a.type === b.type) return 0;\n                //Sorts in ascending order\n                if (isAscend){\n                    if (a.type < b.type ) return -1;\n                    else return 1;\n                }else{\n                    if (a.type < b.type ) return 1;\n                    else return -1;\n                }\n               \n\n\n           });\n        }else if (criteria === \"shift_type\"){\n            this.props.staffs.sort((a,b)=> {\n\n                if (a.shift === b.shift) return 0;\n                //Sorts in ascending order\n                if (isAscend){\n                    if (a.shift < b.shift ) return -1;\n                    else return 1;\n                }else{\n                    if (a.shift < b.shift ) return 1;\n                    else return -1;\n                }\n\n\n           });\n        }\n        else if (criteria === \"name\"){\n            this.props.staffs.sort((a,b)=> {\n\n                if (a.name === b.name) return 0;\n                //Sorts in ascending order\n                if (isAscend){\n                    if (a.name < b.name ) return -1;\n                    else return 1;\n                }else{\n                    if (a.name < b.name ) return 1;\n                    else return -1;\n                }\n\n\n           });\n        }\n        else if (criteria === \"quantity\"){\n            this.props.staffs.sort((a,b)=> {\n                if (isAscend){\n                    if (a.quantity < b.quantity ) return -1;\n                    else return 1;\n                }else{\n                    if (a.quantity < b.quantity ) return 1;\n                    else return -1;\n                }\n\n\n           });\n        }\n           this.props.onStaffChangeOnUpdate(this.props.staffs)\n    }\n\n\n    render() {\n        const staffList = this.props.staffs\n            .filter((staff) =>{\n                if(this.state.shiftFilter)\n                {\n                    return staff.shift === this.state.shiftFilter || staff.type === this.state.shiftFilter ||this.state.shiftFilter === \"All\";  \n                }  \n                return true;\n            })\n            .map((staff, i) =>\n        <tr key={staff.id} id={staff.id} >\n            <td >\n                <Trash className=\"bTrash\" data-testid=\"delete-id\" onClick={this.listRemove.bind(staff,i)} />\n            </td>\n            <td>{staff.type}</td>\n            <td>\n               <Plus className=\"bPlus\" data-testid=\"add-id\" onClick={this.listAdd.bind(staff,i)}/> \n               {staff.quantity} \n               <Dash className=\"bDash\" data-testid=\"minus-id\" onClick={this.listSub.bind(staff,i)}/>\n            </td>\n            <td>{staff.shift}</td>\n            <td>{staff.shiftTotal}</td>\n        </tr>\n\n    );\n\n        return (\n                 this.props.staffs.length > 0 ?\n            <div>\n\n                <Form.Group className=\"mb-3\" controlId=\"shiftType\" required>\n                    \n\t\t\t\t\t\t\t\t<Form.Label>Filter by Shift</Form.Label>\n                                <Tooltip content=\"This helps nurses filter the shift schedule by various groupings\" direction=\"right\">\n                                    <img src={logo} alt=\"Filter shift Tooltip\" width=\"50\" height=\"50\"/>\n                                </Tooltip>\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"shift\"                 \n                                onChange={e => {\n                                    this.setState({ shiftFilter: e.target.value });\n                                  }}\n                                className=\"caret\">\n\t\t\t\t\t\t\t\t\t<option value=\"All\">All</option>\n                                    <option value=\"RN\">RN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"LVN\">LVN</option>\n\t\t\t\t\t\t\t\t\t<option value=\"Unlicensed\">Unlicensed</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Day\">12 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"12 Hours Night\">12 Hours Night</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Day\">8 Hours Day</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Evening\">8 Hours Evening</option>\n\t\t\t\t\t\t\t\t\t<option value=\"8 Hours Night\">8 Hours Night</option>\n\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t</Form.Group>\n            <table className=\"table table-striped table-hover\" id=\"staffCont\">\n                <thead className=\"table-BSU\">\n                    {staffList.length > 0 ? <tr data-testid=\"staffList-id\">\n                        <th></th>\n                        <th scope=\"col\">\n\n\t\t\t\t\t\t\t\t<Form.Label>Staff Type</Form.Label> <span/>\n\t\t\t\t\t\t                        <Form.Label className='bi bi-arrow-down-square' name=\"toggle_filter\"  onClick={e => {\n                                    this.setState({ filterStaffTypeAsc: !this.state.filterStaffTypeAsc,filterNameAsc:false  , filterShiftTypeAsc: false, filterQtyAsc:  false});\n                                    this.filter(\"staff_type\",this.state.filterStaffTypeAsc);\n\t\t\t\t    //e.target.className = e.target.className == \"bi bi-arrow-up-square\" ? \"bi bi-arrow-down-square\": \"bi bi-arrow-down-square\";\n                                  }}> <i class={this.state.filterStaffTypeAsc?\"arrow up\": \"arrow down\"}></i> </Form.Label>\n                        </th>\n                        <th scope=\"col\">\n                        <Form.Label>Quantity</Form.Label> <span/>\n                        <Form.Label className='bi bi-arrow-down-square' name=\"toggle_filter\"  onClick={e => {\n                                    this.setState({filterNameAsc:false  , filterStaffTypeAsc: false, filterShiftTypeAsc: false, filterQtyAsc: !this.state.filterQtyAsc});\n\n                                    this.filter(\"quantity\",this.state.filterQtyAsc);\n\t\t\t\t    //e.target.className = e.target.className == \"bi bi-arrow-up-square\" ? \"bi bi-arrow-down-square\": \"bi bi-arrow-down-square\";\n                                  }}><i class={this.state.filterQtyAsc?\"arrow up\": \"arrow down\"}></i> </Form.Label>\n                        \n                        </th>\n                        <th scope=\"col\">\n                        <Form.Label>Shift </Form.Label> <span/>\n                        <Form.Label className='bi bi-arrow-down-square' name=\"toggle_filter\"  onClick={e => {\n                                    this.setState({ filterNameAsc:false  ,filterStaffTypeAsc: false, filterShiftTypeAsc: !this.state.filterShiftTypeAsc, filterQtyAsc:  false});\n                                    this.filter(\"shift_type\",this.state.filterShiftTypeAsc);\n\t\t\t\t    //e.target.className = e.target.className == \"bi bi-arrow-up-square\" ? \"bi bi-arrow-down-square\": \"bi bi-arrow-down-square\";\n                                  }}> <i class={this.state.filterShiftTypeAsc?\"arrow up\": \"arrow down\"}></i></Form.Label>\n                        </th>\n                        <th scope=\"col\">\n                        <Form.Label>Shift Total</Form.Label>\n                        </th>\n                    </tr> : false}\n                </thead>\n                <tbody>\n\n                    {staffList}\n                </tbody>\n\n            </table>\n            </div>\n: null\n        \n        );\n    }\n}\n\nexport default StaffList;\n","import React,{Component} from 'react'\nimport \"./Scenario.css\";\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nexport default class EventCalendar extends Component{\n\n    \n    onTrigger = (event) => {\n        const events = this.props.eventsArry;\n        let list = []\n        for (let index = 0; index < events.length; index++) {\n            if(event.event.id !== events[index].id){\n                list.push(events[index])\n            }\n            \n        }\n        this.props.parentCallback(list);\n    }\n    \n    render(){\n        \n        \n        return(\n            this.props.showCal ?\n                <div>\n\n                <FullCalendar\n\n                plugins={[ dayGridPlugin, interactionPlugin , timeGridPlugin]}\n\n                eventClick= {this.onTrigger}\n              \n                //selectable\n                initialView = 'twoWeekView'\n                headerToolbar={{\n                    end: 'dayGridMonth,twoWeekView,timeGridDay,prev,next',\n                  }}\n                views = {{\n                    twoWeekView: {\n                         type: 'timeGridWeek',\n                         duration: { week: 2 },\n                         buttonText: '2 weeks'\n                    }\n                   }}\n                events={this.props.eventsArry}\n\n                />\n                </div>\n            :\n            null\n\n        )\n\n    }\n    \n\n}","import React from 'react';\nimport './Result.css';\nimport Tooltip from \"./Tooltip\";\n\nclass Result extends React.Component {\n\n    getShiftValue = (shiftString) => {\n        //considered changing shift to just be 12,...8 so parseint would just work\n        //but additional information from string i.e. day, night might be needed.\n        let shiftValue = 0;\n        switch (shiftString) {\n            case '12 Hours Day':\n                shiftValue = 12;\n                break;\n            case '12 Hours Night':\n                shiftValue = 12;\n                break;\n            case '8 Hours Day':\n                shiftValue = 8;\n                break;\n            case '8 Hours Evening':\n                shiftValue = 8;\n                break;\n            case '8 Hours Night':\n                shiftValue = 8;\n                break;\n            default:\n                shiftValue = 0;\n        }\n\n        return shiftValue;\n    }\n\n\n    getStaffHours = (staffs) => {\n        let totalHours = 0;\n        for (var i = 0; i < staffs.length; i++) {\n\n            let shiftValue = this.getShiftValue(staffs[i].shift);\n            let quantity = parseInt(staffs[i].quantity);\n\n            totalHours += shiftValue * quantity;\n        }\n        return totalHours;\n    }\n\n\n    calculation = (info, staffs) => {\n\n        let censusVal = parseInt(info.census);\n        let HPPDVal = parseInt(info.HPPD);\n\n        let patients = censusVal;\n\n        let totalHPPD = (patients * HPPDVal)\n\n        let staffHours = this.getStaffHours(staffs);\n\n        let retVal = totalHPPD - staffHours;\n\n        if (retVal) {\n            return retVal;\n        }\n\n        return \"--\";\n\n    }\n  \n\n    render() {\n\n        const calc = this.calculation(this.props.info, this.props.staffs);\n\n        return (\n\n            <div className=\"card\">\n                <Tooltip\n                  content=\"Amount of hours left in the budget after staffing.\" direction=\"top\">\n                    <div className=\"card-header\">Hours for Day Remaining</div>\n                </Tooltip>\n                <div id=\"results\" className=\"card-body\">\n                <Tooltip\n                  content=\"HPPD: totalHPPD = (numberPatients * inputHPPD) - totalStaffHours\" direction=\"top\"> \n                    <label>HPPD</label>\n                </Tooltip>\n                    <h1 data-testid=\"result\" className={calc < 0 ? 'negCalc' : ''}>{calc !== '--' ? calc.toFixed(0) : calc}</h1>\n\n                </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default Result;\n","import React from 'react';\nimport './RandomHPPDInfo.css';\n\nimport logo from '../../assets/noun-help-2492040.png';\nimport Tooltip from \"./Tooltip\";\n\nclass RandomHPPDInfo extends React.Component {\n   \n    random = (Min,Max) =>{\n\t\tvar Range = Max - Min;   \n\t\tvar Rand = Math.random();   \n\t\treturn (Min + Math.round(Rand * Range));\n\t}\n\t\n\n    setRandomValues = () =>\n      {\n\n        let randomHPPD = this.random(1,30);\n        let randomBedUnit = this.random(1,60);\n        let randomCensus = this.random(1,randomBedUnit);\n\n        let info ={\n            unit:\"Random Hospital Unit\",\n            HPPD: randomHPPD,\n            bedUnit:randomBedUnit,\n            census: randomCensus,\n        }\n\n\n        this.props.onInfoChange(info); \n  \n      }  \n\n    render() {\n\n\n        return (\n          <div>\n\n            \n            <button type=\"button\" className=\"btn btn-outline-primary\" data-testid=\"random-id\" onClick={this.setRandomValues}>Random Scenario</button>\n            <Tooltip content=\"Prepopulates the hospital staffing scenario fields\" direction=\"right\">\n                <img src={logo} alt=\"Random Sim Tooltip\" width=\"50\" height=\"50\"/>\n              </Tooltip>\n            </div>\n        );\n    }\n}\n\nexport default RandomHPPDInfo;\n","import React from 'react';\n\nimport Tooltip from './Tooltip';\n\nclass StaffBudget extends React.Component {\n\n    // grab staff info and add up budget\n    getShiftBudget = (staffs) => {\n        let shiftBudget = 0;\n\n        for (var i = 0; i < staffs.length; i++) {\n            let shiftTotal = parseInt(staffs[i].shiftTotal);\n            if (staffs[i].type === 'RN') {\n                shiftBudget += shiftTotal * 35;\n            } else if (staffs[i].type === 'LVN') {\n                shiftBudget += shiftTotal * 24;\n            } else {\n                shiftBudget += shiftTotal * 15;\n            }\n        }\n\n        return shiftBudget;\n    }\n  \n\n    render() {\n\n        const shiftBudget = this.getShiftBudget(this.props.staffs);\n        return (\n            \n                this.props.showBudget ?\n                \n                <div className=\"card mt-4\">\n\n                   \n\n                    <Tooltip content=\"Total amount of money budgeted by the hospital for the staff welfare\" direction=\"top\">\n                    <div className=\"card-header\">Total Staff Expenses</div>\n                    </Tooltip>\n                    <Tooltip content=\"(Total number of RNs x 35) + (Total number of LVNs x 24) + (Total Unlicensed Staff x 15)\" direction=\"left\">\n                    <div id=\"budget\" className=\"card-body\">\n                        <h1 data-testid=\"shiftBudgetValue-id\">${shiftBudget}</h1>\n                    </div>\n                    </Tooltip>\n                </div>\n            :\n            null\n            \n        )\n    }\n}\n\nexport default StaffBudget;","import React from 'react';\nimport Tooltip from \"./Tooltip\";\n\nclass ShiftTotals extends React.Component {\n\n    // grab staff info and add up budget\n    getDayShift = (staffs) => {\n        let dayShiftHours = 0;\n\n        for (var i = 0; i < staffs.length; i++) {\n            let shiftTotal = parseInt(staffs[i].shiftTotal);\n            if (staffs[i].shift === '12 Hours Day') {\n                dayShiftHours += shiftTotal;\n            } else if (staffs[i].shift === '8 Hours Day') {\n                dayShiftHours += shiftTotal;\n            }\n        }\n\n        return dayShiftHours;\n    }\n\n    getEveningShift = (staffs) => {\n        let eveningShiftHours = 0;\n\n        for (var i = 0; i < staffs.length; i++) {\n            let shiftTotal = parseInt(staffs[i].shiftTotal);\n            if (staffs[i].shift === '8 Hours Evening') {\n                eveningShiftHours += shiftTotal;\n            }\n        }\n\n        return eveningShiftHours;\n    }\n    getNightShift = (staffs) => {\n        let nightShiftHours = 0;\n\n        for (var i = 0; i < staffs.length; i++) {\n            let shiftTotal = parseInt(staffs[i].shiftTotal);\n            if (staffs[i].shift === '12 Hours Night') {\n                nightShiftHours += shiftTotal;\n            } else if (staffs[i].shift === '8 Hours Night') {\n                nightShiftHours += shiftTotal;\n            }\n        }\n\n        return nightShiftHours;\n    }\n\n    render() {\n\n        const dayShiftHours = this.getDayShift(this.props.staffs);\n        const eveningShiftHours = this.getEveningShift(this.props.staffs);\n        const nightShiftHours = this.getNightShift(this.props.staffs);\n        return (\n            this.props.staffs.length > 0 ?\n            <div>\n                <div className=\"card mt-4\">\n\n                <Tooltip\n                  content=\"Day shift is the shift between morning to afternoon.\"direction=\"top\">\n                    <div className=\"card-header\"> Day Shift Hours</div>\n                </Tooltip>\n                    <div id=\"dayTotal\" className=\"card-body\">\n                        <h1>{dayShiftHours}</h1>\n                    </div>\n                </div>\n\n                <div className=\"card mt-4\">\n                <Tooltip\n                  content=\"Evening shift starts in the evening and ends in the night.\"direction=\"top\">\n                    <div className=\"card-header\">Evening Shift Hours</div>\n                </Tooltip>\n                    <div id=\"eveningTotal\" className=\"card-body\">\n                        <h1>{eveningShiftHours}</h1>\n                    </div>\n                </div>\n\n                <div className=\"card mt-4\">\n                <Tooltip\n                  content=\"Night shift is a shift that starts at midnight and ends in the morning .\"direction=\"top\">\n                    <div className=\"card-header\"> Night Shift Hours</div>\n                </Tooltip>\n                    <div id=\"nightTotal\" className=\"card-body\">\n                        <h1>{nightShiftHours}</h1>\n                    </div>\n                </div>\n            \n            </div>\n            : null\n        )\n    }\n}\n\nexport default ShiftTotals;","import React from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport \"./Scenario.css\";\nimport StaffAdd from \"./StaffAdd\";\nimport StaffAddCal from \"./StaffAddCal\";\nimport StaffList from \"./StaffList\";\nimport EventCalendar from \"./EventCalendar\";\nimport Result from \"./Result\";\nimport RandomHPPDInfo from \"./RandomHPPDInfo\";\nimport StaffBudget from \"./StaffBudget\";\nimport ShiftTotals from \"./ShiftTotals\";\nimport logo from \"../../assets/noun-help-2492040.png\";\nimport Tooltip from \"./Tooltip\";\n// import { Calendar } from \"fullcalendar\";\n\nclass Scenario extends React.Component {\n  \n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      results: \"\",\n      staffNum: \"The Results:\",\n      num: \"\",\n      center: { \"text-align\": \"center\" },\n      staffs: [],\n      backgroundColor: [\"#ceeafd\",\"#39adf9\",\"#ffe4b3\",\"#ffc14d\",\"#ffa500\"], //0 is 12 day, 1 is 12 night, 2 is 8 day, 3 is 8 evening, 4 is 8 night\n      showBudget: false,\n      showCal: true,\n      calEvents: [],\n      eventsRN: [],\n      eventsLVN: [],\n      eventsUN: [],\n      info: {\n        unit: \"\",\n        HPPD: \"\",\n        bedUnit: \"\",\n        census: \"\",\n      },\n      errors: {\n        HPPD: \"\",\n        bedUnit: \"\",\n        census: \"\",\n      },\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  \n  \n\n  handleStaffChange = (staff) => {\n    this.setState({ staffs: staff });\n  };\n  handleStaffChangeCal = (event) => {\n    this.setState({ calEvents: event})\n  };\n\n  handleStaffAdd = (staffItem) => {\n    let staffCopy = [...this.state.staffs, staffItem];\n    this.setState({ staffs: staffCopy });\n  }\n   \n  handleCallback = (childData) =>{\n    this.setState({calEvents: childData})\n} \n\n  handleStaffAddCal = (staffItem) => {\n    \n    //check for shift type\n\t\tif(staffItem.type === \"RN\"){\n      let events = [...this.state.eventsRN, {title: staffItem.name+\", \"+staffItem.type, start: staffItem.start, end:staffItem.end, textColor: staffItem.textColor, backgroundColor: staffItem.backgroundColor}]\n      this.setState({ eventsRN: events});\n\t\t}else if(staffItem.type === \"LVN\"){\n      let events = [...this.state.eventsLVN, {title: staffItem.name+\", \"+staffItem.type, start: staffItem.start, end:staffItem.end, textColor: staffItem.textColor, backgroundColor: staffItem.backgroundColor}]\n      this.setState({ eventsLVN: events});\n\t\t}else if(staffItem.type === \"Unlicensed\"){\n\t\t\tlet events = [...this.state.eventsUN, {title: staffItem.name+\", \"+staffItem.type, start: staffItem.start, end:staffItem.end, textColor: staffItem.textColor, backgroundColor: staffItem.backgroundColor}]\n      this.setState({ eventsUN: events});\n\t\t}\n\n    let eventsAll = [...this.state.calEvents, {id: staffItem.id,type:staffItem.type ,title: staffItem.name+\", \"+staffItem.type, start: staffItem.start, end:staffItem.end, textColor: staffItem.textColor, backgroundColor: staffItem.backgroundColor}]\n    this.setState({ calEvents: eventsAll});\n  };\n\n  handleInfoChange = (info) => {\n    this.setState({ info: info });\n  };\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let newErrors = {};\n    // form validation\n    if (name !== \"unit\") {\n      newErrors = this.findFormErrors(name, value);\n\n      // set errors in state if they exist\n      if (Object.keys(newErrors).length > 0) {\n        this.setState((prevState) => {\n          let errors = Object.assign({}, prevState.errors);\n          errors[name] = newErrors[name];\n          return { errors };\n        });\n      }\n    }\n\n    //https://stackoverflow.com/questions/43638938/updating-an-object-with-setstate-in-react\n    this.setState((prevState) => {\n      let info = Object.assign({}, prevState.info); // creating copy of state variable info\n      info[name] = value; // update the name property, assign a new value\n      if (name === \"bedUnit\") {\n        // if bedUnit, census should default to same value\n        info[\"census\"] = value;\n      }\n\n      // clear error if it's been resolved\n      let errors = Object.assign({}, prevState.errors);\n      if (!!errors[name] && errors[name] !== newErrors[name]) {\n        errors[name] = null;\n      }\n\n      return { info, errors }; // return new info and error objects\n    });\n  }\n\n  // handle show budget check change\n  handleCheckChangeBudget = (event) => {\n    const target = event.target;\n    const value = target.checked;\n\n    this.setState((prevState) => {\n      let showBudget = Object.assign({}, prevState.showBudget);\n      showBudget = value;\n      return { showBudget };\n    });\n  };\n  // handle show budget check change\n  handleCheckChangeCal = (event) => {\n    const target = event.target;\n    const value = target.checked;\n\n    this.setState((prevState) => {\n      let showCal = Object.assign({}, prevState.showCal);\n      showCal = value;\n      return { showCal };\n    });\n\n  };\n\n  // https://dev.to/alecgrey/controlled-forms-with-front-and-backend-validations-using-react-bootstrap-5a2\n  findFormErrors = (name, val) => {\n    const newErrors = {};\n    val = parseInt(val);\n    if (name === \"HPPD\") {\n      // HPPD errors\n      if (!val || val === \"\") newErrors.HPPD = \"HPPD cannot be blank!\";\n      else if (val < 1 || val > 30)\n        newErrors.HPPD = \"HPPD should be between 1 and 30\";\n    } else if (name === \"bedUnit\") {\n      // bedUnit errors\n      if (!val || val === \"\")\n        newErrors.bedUnit = \"Number of beds cannot be blank!\";\n      else if (val < 1 || val > 60)\n        newErrors.bedUnit = \"Number of beds should be between 1 and 60\";\n    } else if (name === \"census\") {\n      // census errors\n      if (!val || val === \"\") newErrors.census = \"Census cannot be blank!\";\n      else if (val < 1) newErrors.census = \"Census cannot be less than 1\";\n      else if (val > this.state.info.bedUnit)\n        newErrors.census = \"Census cannot exceed the number of beds in a unit!\";\n    }\n    return newErrors;\n  };\n\n\n\n  //https://paladini.dev/posts/how-to-make-an-extremely-reusable-tooltip-component-with-react--and-nothing-else/\n\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <div className=\"row mt-3\">\n          <div className=\"col-md-4 \">\n            <RandomHPPDInfo onInfoChange={this.handleInfoChange} />\n          </div>\n\n          <div className=\"col-md-8 fs-5\">\n            <div className=\"float-sm-end\">\n\n                <label>\n                  <input\n                    type=\"checkbox\"\n\n                    id=\"showBudget\"\n                    label=\"Show Budget\"\n                    name=\"showBudget\"\n                    data-testid=\"showbudget-id\"\n                    checked={this.state.showBudget}\n                    onChange={this.handleCheckChangeBudget}\n\n                  />\n                  Show Budget\n                </label>\n                <Tooltip\n                  content=\"This displays the staffing budget.\"\n                  direction=\"left\"\n                >\n                  <img src={logo} alt=\"Budget Tooltip\" width=\"50\" height=\"50\" />\n                </Tooltip>\n               <br/>  \n              <label>\n                  <input\n                    type=\"checkbox\"\n                    id=\"showCal\"\n                    label=\"Show Calendar\"\n                    name=\"showCal\"\n                    data-testid=\"showcal-id\"\n                    checked={this.state.showCal}\n                    onChange={this.handleCheckChangeCal}\n\n                  />\n                  Show Calender\n                </label>\n                <Tooltip\n                  content=\"This displays the monthly calender for use with staffing\"\n                  direction=\"left\"\n                >\n                  <img src={logo} alt=\"Budget Tooltip\" width=\"50\" height=\"50\" />\n                </Tooltip>\n\n              <div></div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"row mt-5\">\n          <div className=\"col-md-3 col-sm-6 order-sm-last\">\n            <Result staffs={this.state.staffs} info={this.state.info}></Result>\n            <StaffBudget\n              staffs={this.state.staffs}\n              showBudget={this.state.showBudget}\n            ></StaffBudget>\n            <ShiftTotals staffs={this.state.staffs}></ShiftTotals>\n          </div>\n\n          {/* Form has to be used instead of form because of validation feedback and bootstrap version used */}\n\n            \n\n          <div className=\"col-md-9 col-sm-6 order-sm-first\">\n            <Form className=\"row\" noValidate>\n              <div className=\"col-md-6 mt-3 fs-5\">\n\n                <Tooltip\n                  content=\"Wards where patients are admitted.\"\n                  direction=\"right\">\n                  <Form.Label htmlFor=\"unit\">Hospital unit</Form.Label>\n                </Tooltip>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"unit\"\n                    id=\"unit\"\n                    data-testid=\"unit-id\"\n                    placeholder=\"Hospital Unit\"\n                    onChange={this.handleInputChange}\n                    value={this.state.info.unit}\n                  />\n                \n\n\n              </div>\n\n              <div className=\"col-md-6 mt-3 fs-5\">\n              <Tooltip\n                  content=\"Total number of beds available in the hospital wards.\" direction=\"top\">\n                <Form.Label htmlFor=\"bedUnit\">Number of beds</Form.Label>\n              </Tooltip>\n                <Form.Control\n                  type=\"number\"\n                  name=\"bedUnit\"\n                  id=\"bedUnit\"\n                  data-testid=\"numbeds-id\"\n                  placeholder=\"Number of Beds\"\n                  onChange={this.handleInputChange}\n                  value={this.state.info.bedUnit}\n                  isInvalid={!!this.state.errors.bedUnit}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {\" \"}\n                  {this.state.errors.bedUnit}{\" \"}\n                </Form.Control.Feedback>\n              </div>\n\n              <div className=\"col-md-6 mt-3 fs-5\">\n\n              <Tooltip\n                  content=\"Average number of hours needed to care for each patient on the unit.\" direction=\"right\">\n                <Form.Label htmlFor=\"HPPD\">HPPD</Form.Label>\n              </Tooltip>\n                <Form.Control\n                  type=\"number\"\n                  name=\"HPPD\"\n                  id=\"HPPD\"\n                  data-testid=\"hppd-id\"\n                  placeholder=\"HPPD\"\n                  onChange={this.handleInputChange}\n                  value={this.state.info.HPPD}\n                  isInvalid={!!this.state.errors.HPPD}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {\" \"}\n                  {this.state.errors.HPPD}{\" \"}\n                </Form.Control.Feedback>\n              </div>\n\n              <div className=\"col-md-6 mt-3 fs-5\">\n\n              <Tooltip\n                  content=\"Total number of patients admitted to the health facility at any time of the day.\n                  \" direction=\"right\">\n                <Form.Label htmlFor=\"census\">Census</Form.Label>\n              </Tooltip>\n                <Form.Control\n                  type=\"number\"\n                  name=\"census\"\n                  id=\"census\"\n                  data-testid=\"census-id\"\n                  placeholder=\"Census\"\n                  onChange={this.handleInputChange}\n                  value={this.state.info.census}\n                  isInvalid={!!this.state.errors.census}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {\" \"}\n                  {this.state.errors.census}{\" \"}\n                </Form.Control.Feedback>\n\n              </div>\n            </Form>\n            <div className=\"row\">\n              <div className=\"col-md-4 mt-4 \">\n                <StaffAdd\n                  onStaffChange={this.handleStaffChange}\n                  onStaffAdd={this.handleStaffAdd}\n                  staffs={this.state.staffs}\n                  backgroundColor = {this.state.backgroundColor}\n                  textColor = {this.state.textColor}\n                  showBud = {this.state.showBudget}\n                />\n              </div>\n            </div>\n\n            <div className=\"row mt-5 \">\n              <div className=\"mb-10\">\n                <StaffList\n                  staffs={this.state.staffs}\n                  onStaffChangeOnUpdate={this.handleStaffChange}\n                ></StaffList>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row\">\n              <div className=\"col-md-4 mt-4 \">\n                <StaffAddCal\n                  onStaffAdd={this.handleStaffAddCal}\n                  calChange={this.handleStaffChangeCal}\n                  staffs={this.state.staffs}\n                  backgroundColor = {this.state.backgroundColor}\n                  textColor = {this.state.textColor}\n                  showCal={this.state.showCal}\n                />\n              </div>\n            </div>\n        <div id='calendar'>\n\n\n            <EventCalendar\n            eventsArry={this.state.calEvents}\n            showCal={this.state.showCal}\n            bc={this.state.backgroundColor}\n            parentCallback = {this.handleCallback}\n            >\n            \n            </EventCalendar>\n          </div>\n\n      </div>\n      \n    );\n  }\n}\n\n\nexport default Scenario;\n","export default __webpack_public_path__ + \"static/media/Left-aligned-square-gray-2.11bbe62b.png\";","import './Header.css';\nimport React from 'react';\nimport logo from '../../assets/Left-aligned-square-gray-2.png';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n    onReload = () => {\n        console.log(\"Reload clicked\");\n        window.location.reload();\n    }\n\n    render() {\n        return (\n\n            <header>\n                <Navbar bg=\"light\" >\n                    <Container>\n                        <img src={logo} alt=\"Logo\" data-testid=\"reload\" onClick={this.onReload} />\n                        <Nav className=\"me-auto\">\n                            <Link className=\"text-dark nav-link\" to=\"/\">Home</Link>\n                            <Link className=\"text-dark nav-link\" to=\"/about\">About</Link>\n                            <Nav.Link className=\"text-dark\" href=\"https://www.boisestate.edu/nursing/\">BSU Nursing Department</Nav.Link>\n                           </Nav>\n                           \n                    </Container>\n                </Navbar>\n                \n                \n\n                <div className=\"p-5 bg-primary text-white rounded\">\n                    <h1>Inpatient Nurse Staffing Simulator</h1>\n                    \n                </div>\n            </header>\n\n        );\n    }\n}\n\nexport default Header;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(){\n    return(\n        <footer id=\"footer\">BSU Nursing |   Dr. Renee Walters   |   reneewalters@boisestate.edu</footer>\n    );\n}\n\nexport default Footer;","import './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport About from './components/main/About.js';\nimport Scenario from './components/main/Scenario.js';\nimport Header from './components/header/Header.js';\nimport Footer from './components/footer/Footer';\n\n\nfunction App() {\n\n  return (\n    <div className=\"container\">\n      <div className=\"App\">\n          <div>\n          <Header />\n          <Routes>\n            <Route exact path=\"/\" element={<Scenario />} />\n            <Route path=\"/about\" element={<About />} />\n          </Routes>\n          </div>\n      <Footer />\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { HashRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}